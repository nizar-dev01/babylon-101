{"version":3,"file":"js/app.11c9a14e.js","mappings":"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","sources":["webpack://babylon-101/./src/App.vue","webpack://babylon-101/./src/App.vue?7ccd","webpack://babylon-101/./src/components/Game.vue?0ea1","webpack://babylon-101/./src/babylon/game/inputController.ts","webpack://babylon-101/./src/babylon/game/characterController.ts","webpack://babylon-101/./src/babylon/game/index.ts","webpack://babylon-101/./src/babylon/game/ui.ts","webpack://babylon-101/./src/babylon/game/lantern.ts","webpack://babylon-101/./src/babylon/game/environment.ts","webpack://babylon-101/./src/components/Game.vue?cc64","webpack://babylon-101/./src/components/Game.vue","webpack://babylon-101/./src/components/Learning.vue?2375","webpack://babylon-101/./src/babylon/learning/scene.ts","webpack://babylon-101/./src/babylon/learning/index.ts","webpack://babylon-101/./src/components/Learning.vue?ba86","webpack://babylon-101/./src/components/Learning.vue","webpack://babylon-101/./src/router/index.ts","webpack://babylon-101/./src/main.ts","webpack://babylon-101/webpack/bootstrap","webpack://babylon-101/webpack/runtime/chunk loaded","webpack://babylon-101/webpack/runtime/define property getters","webpack://babylon-101/webpack/runtime/global","webpack://babylon-101/webpack/runtime/hasOwnProperty shorthand","webpack://babylon-101/webpack/runtime/make namespace object","webpack://babylon-101/webpack/runtime/jsonp chunk loading","webpack://babylon-101/webpack/startup"],"sourcesContent":["<template>\n  <router-view></router-view>\n</template>\n","import { render } from \"./App.vue?vue&type=template&id=67ac188c\"\nconst script = {}\n\nimport exportComponent from \"/home/nizar/work/learning/front-end/babylon-101/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { ref: \"canvas\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"canvas\", _hoisted_1, null, 512))\n}","import {\n  Scene,\n  ActionManager,\n  ExecuteCodeAction,\n  Observer,\n  Scalar,\n} from \"@babylonjs/core\";\nimport { Hud } from \"./ui\";\n\nexport class PlayerInput {\n  public inputMap: any;\n  private _scene: Scene;\n\n  //simple movement\n  public horizontal: number = 0;\n  public vertical: number = 0;\n  //tracks whether or not there is movement in that axis\n  public horizontalAxis: number = 0;\n  public verticalAxis: number = 0;\n\n  //jumping and dashing\n  public jumpKeyDown: boolean = false;\n  public dashing: boolean = false;\n\n  //Mobile Input trackers\n  private _ui: Hud;\n  public mobileLeft: boolean;\n  public mobileRight: boolean;\n  public mobileUp: boolean;\n  public mobileDown: boolean;\n  private _mobileJump: boolean;\n  private _mobileDash: boolean;\n\n  constructor(scene: Scene, ui: Hud) {\n    this._scene = scene;\n    this._ui = ui;\n\n    //scene action manager to detect inputs\n    this._scene.actionManager = new ActionManager(this._scene);\n\n    this.inputMap = {};\n    this._scene.actionManager.registerAction(\n      new ExecuteCodeAction(ActionManager.OnKeyDownTrigger, (evt) => {\n        this.inputMap[evt.sourceEvent.key] = evt.sourceEvent.type == \"keydown\";\n      })\n    );\n    this._scene.actionManager.registerAction(\n      new ExecuteCodeAction(ActionManager.OnKeyUpTrigger, (evt) => {\n        this.inputMap[evt.sourceEvent.key] = evt.sourceEvent.type == \"keydown\";\n      })\n    );\n\n    //add to the scene an observable that calls updateFromKeyboard before rendering\n    scene.onBeforeRenderObservable.add(() => {\n      this._updateFromKeyboard();\n    });\n\n    // Set up Mobile Controls if on mobile device\n    if (this._ui.isMobile) {\n      this._setUpMobile();\n    }\n  }\n\n  // Keyboard controls & Mobile controls\n  //handles what is done when keys are pressed or if on mobile, when buttons are pressed\n  private _updateFromKeyboard(): void {\n    //forward - backwards movement\n    if ((this.inputMap[\"ArrowUp\"] || this.mobileUp) && !this._ui.gamePaused) {\n      this.verticalAxis = 1;\n      this.vertical = Scalar.Lerp(this.vertical, 1, 0.2);\n    } else if (\n      (this.inputMap[\"ArrowDown\"] || this.mobileDown) &&\n      !this._ui.gamePaused\n    ) {\n      this.vertical = Scalar.Lerp(this.vertical, -1, 0.2);\n      this.verticalAxis = -1;\n    } else {\n      this.vertical = 0;\n      this.verticalAxis = 0;\n    }\n\n    //left - right movement\n    if (\n      (this.inputMap[\"ArrowLeft\"] || this.mobileLeft) &&\n      !this._ui.gamePaused\n    ) {\n      //lerp will create a scalar linearly interpolated amt between start and end scalar\n      //taking current horizontal and how long you hold, will go up to -1(all the way left)\n      this.horizontal = Scalar.Lerp(this.horizontal, -1, 0.2);\n      this.horizontalAxis = -1;\n    } else if (\n      (this.inputMap[\"ArrowRight\"] || this.mobileRight) &&\n      !this._ui.gamePaused\n    ) {\n      this.horizontal = Scalar.Lerp(this.horizontal, 1, 0.2);\n      this.horizontalAxis = 1;\n    } else {\n      this.horizontal = 0;\n      this.horizontalAxis = 0;\n    }\n\n    //dash\n    if ((this.inputMap[\"Shift\"] || this._mobileDash) && !this._ui.gamePaused) {\n      this.dashing = true;\n    } else {\n      this.dashing = false;\n    }\n\n    //Jump Checks (SPACE)\n    if ((this.inputMap[\" \"] || this._mobileJump) && !this._ui.gamePaused) {\n      this.jumpKeyDown = true;\n    } else {\n      this.jumpKeyDown = false;\n    }\n  }\n\n  // Mobile controls\n  private _setUpMobile(): void {\n    //Jump Button\n    this._ui.jumpBtn.onPointerDownObservable.add(() => {\n      this._mobileJump = true;\n    });\n    this._ui.jumpBtn.onPointerUpObservable.add(() => {\n      this._mobileJump = false;\n    });\n\n    //Dash Button\n    this._ui.dashBtn.onPointerDownObservable.add(() => {\n      this._mobileDash = true;\n    });\n    this._ui.dashBtn.onPointerUpObservable.add(() => {\n      this._mobileDash = false;\n    });\n\n    //Arrow Keys\n    this._ui.leftBtn.onPointerDownObservable.add(() => {\n      this.mobileLeft = true;\n    });\n    this._ui.leftBtn.onPointerUpObservable.add(() => {\n      this.mobileLeft = false;\n    });\n\n    this._ui.rightBtn.onPointerDownObservable.add(() => {\n      this.mobileRight = true;\n    });\n    this._ui.rightBtn.onPointerUpObservable.add(() => {\n      this.mobileRight = false;\n    });\n\n    this._ui.upBtn.onPointerDownObservable.add(() => {\n      this.mobileUp = true;\n    });\n    this._ui.upBtn.onPointerUpObservable.add(() => {\n      this.mobileUp = false;\n    });\n\n    this._ui.downBtn.onPointerDownObservable.add(() => {\n      this.mobileDown = true;\n    });\n    this._ui.downBtn.onPointerUpObservable.add(() => {\n      this.mobileDown = false;\n    });\n  }\n}\n","import {\n  Scene,\n  Vector3,\n  Ray,\n  TransformNode,\n  Mesh,\n  Color3,\n  Color4,\n  UniversalCamera,\n  Quaternion,\n  AnimationGroup,\n  ExecuteCodeAction,\n  ActionManager,\n  ParticleSystem,\n  Texture,\n  SphereParticleEmitter,\n  Sound,\n  Observable,\n  ShadowGenerator,\n  AbstractMesh,\n} from \"@babylonjs/core\";\nimport { PlayerInput } from \"./inputController\";\n\nexport class Player extends TransformNode {\n  public camera: UniversalCamera;\n  public scene: Scene;\n  private _input: PlayerInput;\n\n  //Player\n  public mesh: Mesh | AbstractMesh; //outer collisionbox of player\n\n  //Camera\n  private _camRoot: TransformNode;\n  private _yTilt: TransformNode;\n\n  //animations\n  private _run: AnimationGroup;\n  private _idle: AnimationGroup;\n  private _jump: AnimationGroup;\n  private _land: AnimationGroup;\n  private _dash: AnimationGroup;\n\n  // animation trackers\n  private _currentAnim: AnimationGroup = null;\n  private _prevAnim: AnimationGroup;\n  private _isFalling: boolean = false;\n  private _jumped: boolean = false;\n\n  //const values\n  private static readonly PLAYER_SPEED: number = 0.45;\n  private static readonly JUMP_FORCE: number = 0.8;\n  private static readonly GRAVITY: number = -2.8;\n  private static readonly DASH_FACTOR: number = 2.5;\n  private static readonly DASH_TIME: number = 10; //how many frames the dash lasts\n  private static readonly DOWN_TILT: Vector3 = new Vector3(\n    0.8290313946973066,\n    0,\n    0\n  );\n  private static readonly ORIGINAL_TILT: Vector3 = new Vector3(\n    0.5934119456780721,\n    0,\n    0\n  );\n  public dashTime: number = 0;\n\n  //player movement vars\n  private _deltaTime: number = 0;\n  private _h: number;\n  private _v: number;\n\n  private _moveDirection: Vector3 = new Vector3();\n  private _inputAmt: number;\n\n  //dashing\n  private _dashPressed: boolean;\n  private _canDash: boolean = true;\n\n  //gravity, ground detection, jumping\n  private _gravity: Vector3 = new Vector3();\n  private _lastGroundPos: Vector3 = Vector3.Zero(); // keep track of the last grounded position\n  private _grounded: boolean;\n  private _jumpCount: number = 1;\n\n  //player variables\n  public lanternsLit: number = 1; //num lanterns lit\n  public totalLanterns: number;\n  public win: boolean = false; //whether the game is won\n\n  //sparkler\n  public sparkler: ParticleSystem; // sparkler particle system\n  public sparkLit: boolean = true;\n  public sparkReset: boolean = false;\n\n  //moving platforms\n  public _raisePlatform: boolean;\n\n  //sfx\n  public lightSfx: Sound;\n  public sparkResetSfx: Sound;\n  private _resetSfx: Sound;\n  private _walkingSfx: Sound;\n  private _jumpingSfx: Sound;\n  private _dashingSfx: Sound;\n\n  //observables\n  public onRun = new Observable();\n\n  //tutorial\n  public tutorial_move: boolean;\n  public tutorial_dash: boolean;\n  public tutorial_jump: boolean;\n\n  constructor(\n    assets: { mesh: Mesh | AbstractMesh; animationGroups: AnimationGroup[] },\n    scene: Scene,\n    shadowGenerator: ShadowGenerator,\n    input?: PlayerInput\n  ) {\n    super(\"player\", scene);\n    this.scene = scene;\n\n    //set up sounds\n    this._loadSounds(this.scene);\n    //camera\n    this._setupPlayerCamera();\n    this.mesh = assets.mesh;\n    this.mesh.parent = this;\n\n    this.scene.getLightByName(\"sparklight\").parent =\n      this.scene.getTransformNodeByName(\"Empty\");\n\n    this._idle = assets.animationGroups[1];\n    this._jump = assets.animationGroups[2];\n    this._land = assets.animationGroups[3];\n    this._run = assets.animationGroups[4];\n    this._dash = assets.animationGroups[0];\n\n    //--COLLISIONS--\n    this.mesh.actionManager = new ActionManager(this.scene);\n\n    this.mesh.actionManager.registerAction(\n      new ExecuteCodeAction(\n        {\n          trigger: ActionManager.OnIntersectionEnterTrigger,\n          parameter: this.scene.getMeshByName(\"destination\"),\n        },\n        () => {\n          if (this.lanternsLit == 22) {\n            this.win = true;\n            //tilt camera to look at where the fireworks will be displayed\n            this._yTilt.rotation = new Vector3(\n              5.689773361501514,\n              0.23736477827122882,\n              0\n            );\n            this._yTilt.position = new Vector3(0, 6, 0);\n            this.camera.position.y = 17;\n          }\n        }\n      )\n    );\n\n    //if player falls through \"world\", reset the position to the last safe grounded position\n    this.mesh.actionManager.registerAction(\n      new ExecuteCodeAction(\n        {\n          trigger: ActionManager.OnIntersectionEnterTrigger,\n          parameter: this.scene.getMeshByName(\"ground\"),\n        },\n        () => {\n          this.mesh.position.copyFrom(this._lastGroundPos); // need to use copy or else they will be both pointing at the same thing & update together\n          //--SOUNDS--\n          this._resetSfx.play();\n        }\n      )\n    );\n\n    //--SOUNDS--\n    //observable for when to play the walking sfx\n    this.onRun.add((play) => {\n      if (play && !this._walkingSfx.isPlaying) {\n        this._walkingSfx.play();\n      } else if (!play && this._walkingSfx.isPlaying) {\n        this._walkingSfx.stop();\n        this._walkingSfx.isPlaying = false; // make sure that walkingsfx.stop is called only once\n      }\n    });\n\n    this._createSparkles(); //create the sparkler particle system\n    this._setUpAnimations();\n    shadowGenerator.addShadowCaster(assets.mesh);\n\n    this._input = input;\n  }\n\n  private _updateFromControls(): void {\n    this._deltaTime = this.scene.getEngine().getDeltaTime() / 1000.0;\n\n    this._moveDirection = Vector3.Zero();\n    this._h = this._input.horizontal; //right, x\n    this._v = this._input.vertical; //fwd, z\n\n    //tutorial, if the player moves for the first time\n    if ((this._h != 0 || this._v != 0) && !this.tutorial_move) {\n      this.tutorial_move = true;\n    }\n\n    //--DASHING--\n    //limit dash to once per ground/platform touch\n    //can only dash when in the air\n    if (\n      this._input.dashing &&\n      !this._dashPressed &&\n      this._canDash &&\n      !this._grounded\n    ) {\n      this._canDash = false;\n      this._dashPressed = true;\n\n      //sfx and animations\n      this._currentAnim = this._dash;\n      this._dashingSfx.play();\n\n      //tutorial, if the player dashes for the first time\n      if (!this.tutorial_dash) {\n        this.tutorial_dash = true;\n      }\n    }\n\n    let dashFactor = 1;\n    //if you're dashing, scale movement\n    if (this._dashPressed) {\n      if (this.dashTime > Player.DASH_TIME) {\n        this.dashTime = 0;\n        this._dashPressed = false;\n      } else {\n        dashFactor = Player.DASH_FACTOR;\n      }\n      this.dashTime++;\n    }\n\n    //--MOVEMENTS BASED ON CAMERA (as it rotates)--\n    let fwd = this._camRoot.forward;\n    let right = this._camRoot.right;\n    let correctedVertical = fwd.scaleInPlace(this._v);\n    let correctedHorizontal = right.scaleInPlace(this._h);\n\n    //movement based off of camera's view\n    let move = correctedHorizontal.addInPlace(correctedVertical);\n\n    //clear y so that the character doesnt fly up, normalize for next step, taking into account whether we've DASHED or not\n    this._moveDirection = new Vector3(\n      move.normalize().x * dashFactor,\n      0,\n      move.normalize().z * dashFactor\n    );\n\n    //clamp the input value so that diagonal movement isn't twice as fast\n    let inputMag = Math.abs(this._h) + Math.abs(this._v);\n    if (inputMag < 0) {\n      this._inputAmt = 0;\n    } else if (inputMag > 1) {\n      this._inputAmt = 1;\n    } else {\n      this._inputAmt = inputMag;\n    }\n    //final movement that takes into consideration the inputs\n    this._moveDirection = this._moveDirection.scaleInPlace(\n      this._inputAmt * Player.PLAYER_SPEED\n    );\n\n    //check if there is movement to determine if rotation is needed\n    let input = new Vector3(\n      this._input.horizontalAxis,\n      0,\n      this._input.verticalAxis\n    ); //along which axis is the direction\n    if (input.length() == 0) {\n      //if there's no input detected, prevent rotation and keep player in same rotation\n      return;\n    }\n\n    //rotation based on input & the camera angle\n    let angle = Math.atan2(\n      this._input.horizontalAxis,\n      this._input.verticalAxis\n    );\n    angle += this._camRoot.rotation.y;\n    let targ = Quaternion.FromEulerAngles(0, angle, 0);\n    this.mesh.rotationQuaternion = Quaternion.Slerp(\n      this.mesh.rotationQuaternion,\n      targ,\n      10 * this._deltaTime\n    );\n  }\n\n  private _setUpAnimations(): void {\n    this.scene.stopAllAnimations();\n    this._run.loopAnimation = true;\n    this._idle.loopAnimation = true;\n\n    //initialize current and previous\n    this._currentAnim = this._idle;\n    this._prevAnim = this._land;\n  }\n\n  private _animatePlayer(): void {\n    if (\n      !this._dashPressed &&\n      !this._isFalling &&\n      !this._jumped &&\n      (this._input.inputMap[\"ArrowUp\"] ||\n        this._input.mobileUp ||\n        this._input.inputMap[\"ArrowDown\"] ||\n        this._input.mobileDown ||\n        this._input.inputMap[\"ArrowLeft\"] ||\n        this._input.mobileLeft ||\n        this._input.inputMap[\"ArrowRight\"] ||\n        this._input.mobileRight)\n    ) {\n      this._currentAnim = this._run;\n      this.onRun.notifyObservers(true);\n    } else if (this._jumped && !this._isFalling && !this._dashPressed) {\n      this._currentAnim = this._jump;\n    } else if (!this._isFalling && this._grounded) {\n      this._currentAnim = this._idle;\n      //only notify observer if it's playing\n      if (this.scene.getSoundByName(\"walking\").isPlaying) {\n        this.onRun.notifyObservers(false);\n      }\n    } else if (this._isFalling) {\n      this._currentAnim = this._land;\n    }\n\n    //Animations\n    if (this._currentAnim != null && this._prevAnim !== this._currentAnim) {\n      this._prevAnim.stop();\n      this._currentAnim.play(this._currentAnim.loopAnimation);\n      this._prevAnim = this._currentAnim;\n    }\n  }\n\n  //--GROUND DETECTION--\n  //Send raycast to the floor to detect if there are any hits with meshes below the character\n  private _floorRaycast(\n    offsetx: number,\n    offsetz: number,\n    raycastlen: number\n  ): Vector3 {\n    //position the raycast from bottom center of mesh\n    let raycastFloorPos = new Vector3(\n      this.mesh.position.x + offsetx,\n      this.mesh.position.y + 0.5,\n      this.mesh.position.z + offsetz\n    );\n    let ray = new Ray(raycastFloorPos, Vector3.Up().scale(-1), raycastlen);\n\n    //defined which type of meshes should be pickable\n    let predicate = function (mesh: { isPickable: any; isEnabled: () => any }) {\n      return mesh.isPickable && mesh.isEnabled();\n    };\n\n    let pick = this.scene.pickWithRay(ray, predicate);\n\n    if (pick.hit) {\n      //grounded\n      return pick.pickedPoint;\n    } else {\n      //not grounded\n      return Vector3.Zero();\n    }\n  }\n\n  //raycast from the center of the player to check for whether player is grounded\n  private _isGrounded(): boolean {\n    if (this._floorRaycast(0, 0, 0.6).equals(Vector3.Zero())) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  //https://www.babylonjs-playground.com/#FUK3S#8\n  //https://www.html5gamedevs.com/topic/7709-scenepick-a-mesh-that-is-enabled-but-not-visible/\n  //check whether a mesh is sloping based on the normal\n  private _checkSlope(): boolean {\n    //only check meshes that are pickable and enabled (specific for collision meshes that are invisible)\n    let predicate = function (mesh: { isPickable: any; isEnabled: () => any }) {\n      return mesh.isPickable && mesh.isEnabled();\n    };\n\n    //4 raycasts outward from center\n    let raycast = new Vector3(\n      this.mesh.position.x,\n      this.mesh.position.y + 0.5,\n      this.mesh.position.z + 0.25\n    );\n    let ray = new Ray(raycast, Vector3.Up().scale(-1), 1.5);\n    let pick = this.scene.pickWithRay(ray, predicate);\n\n    let raycast2 = new Vector3(\n      this.mesh.position.x,\n      this.mesh.position.y + 0.5,\n      this.mesh.position.z - 0.25\n    );\n    let ray2 = new Ray(raycast2, Vector3.Up().scale(-1), 1.5);\n    let pick2 = this.scene.pickWithRay(ray2, predicate);\n\n    let raycast3 = new Vector3(\n      this.mesh.position.x + 0.25,\n      this.mesh.position.y + 0.5,\n      this.mesh.position.z\n    );\n    let ray3 = new Ray(raycast3, Vector3.Up().scale(-1), 1.5);\n    let pick3 = this.scene.pickWithRay(ray3, predicate);\n\n    let raycast4 = new Vector3(\n      this.mesh.position.x - 0.25,\n      this.mesh.position.y + 0.5,\n      this.mesh.position.z\n    );\n    let ray4 = new Ray(raycast4, Vector3.Up().scale(-1), 1.5);\n    let pick4 = this.scene.pickWithRay(ray4, predicate);\n\n    if (pick.hit && !pick.getNormal().equals(Vector3.Up())) {\n      if (pick.pickedMesh.name.includes(\"stair\")) {\n        return true;\n      }\n    } else if (pick2.hit && !pick2.getNormal().equals(Vector3.Up())) {\n      if (pick2.pickedMesh.name.includes(\"stair\")) {\n        return true;\n      }\n    } else if (pick3.hit && !pick3.getNormal().equals(Vector3.Up())) {\n      if (pick3.pickedMesh.name.includes(\"stair\")) {\n        return true;\n      }\n    } else if (pick4.hit && !pick4.getNormal().equals(Vector3.Up())) {\n      if (pick4.pickedMesh.name.includes(\"stair\")) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private _updateGroundDetection(): void {\n    this._deltaTime = this.scene.getEngine().getDeltaTime() / 1000.0;\n\n    //if not grounded\n    if (!this._isGrounded()) {\n      //if the body isnt grounded, check if it's on a slope and was either falling or walking onto it\n      if (this._checkSlope() && this._gravity.y <= 0) {\n        console.log(\"slope\");\n        //if you are considered on a slope, you're able to jump and gravity wont affect you\n        this._gravity.y = 0;\n        this._jumpCount = 1;\n        this._grounded = true;\n      } else {\n        //keep applying gravity\n        this._gravity = this._gravity.addInPlace(\n          Vector3.Up().scale(this._deltaTime * Player.GRAVITY)\n        );\n        this._grounded = false;\n      }\n    }\n\n    //limit the speed of gravity to the negative of the jump power\n    if (this._gravity.y < -Player.JUMP_FORCE) {\n      this._gravity.y = -Player.JUMP_FORCE;\n    }\n\n    //cue falling animation once gravity starts pushing down\n    if (this._gravity.y < 0 && this._jumped) {\n      //todo: play a falling anim if not grounded BUT not on a slope\n      this._isFalling = true;\n    }\n\n    //update our movement to account for jumping\n    this.mesh.moveWithCollisions(this._moveDirection.addInPlace(this._gravity));\n\n    if (this._isGrounded()) {\n      this._gravity.y = 0;\n      this._grounded = true;\n      //keep track of last known ground position\n      this._lastGroundPos.copyFrom(this.mesh.position);\n\n      this._jumpCount = 1;\n      //dashing reset\n      this._canDash = true;\n      //reset sequence(needed if we collide with the ground BEFORE actually completing the dash duration)\n      this.dashTime = 0;\n      this._dashPressed = false;\n\n      //jump & falling animation flags\n      this._jumped = false;\n      this._isFalling = false;\n    }\n\n    //Jump detection\n    if (this._input.jumpKeyDown && this._jumpCount > 0) {\n      this._gravity.y = Player.JUMP_FORCE;\n      this._jumpCount--;\n\n      //jumping and falling animation flags\n      this._jumped = true;\n      this._isFalling = false;\n      this._jumpingSfx.play();\n\n      //tutorial, if the player jumps for the first time\n      if (!this.tutorial_jump) {\n        this.tutorial_jump = true;\n      }\n    }\n  }\n\n  //--GAME UPDATES--\n  private _beforeRenderUpdate(): void {\n    this._updateFromControls();\n    this._updateGroundDetection();\n    this._animatePlayer();\n  }\n\n  public activatePlayerCamera(): UniversalCamera {\n    this.scene.registerBeforeRender(() => {\n      this._beforeRenderUpdate();\n      this._updateCamera();\n    });\n    return this.camera;\n  }\n\n  //--CAMERA--\n  private _updateCamera(): void {\n    //trigger areas for rotating camera view\n    if (this.mesh.intersectsMesh(this.scene.getMeshByName(\"cornerTrigger\"))) {\n      if (this._input.horizontalAxis > 0) {\n        //rotates to the right\n        this._camRoot.rotation = Vector3.Lerp(\n          this._camRoot.rotation,\n          new Vector3(\n            this._camRoot.rotation.x,\n            Math.PI / 2,\n            this._camRoot.rotation.z\n          ),\n          0.4\n        );\n      } else if (this._input.horizontalAxis < 0) {\n        //rotates to the left\n        this._camRoot.rotation = Vector3.Lerp(\n          this._camRoot.rotation,\n          new Vector3(\n            this._camRoot.rotation.x,\n            Math.PI,\n            this._camRoot.rotation.z\n          ),\n          0.4\n        );\n      }\n    }\n    //rotates the camera to point down at the player when they enter the area, and returns it back to normal when they exit\n    if (this.mesh.intersectsMesh(this.scene.getMeshByName(\"festivalTrigger\"))) {\n      if (this._input.verticalAxis > 0) {\n        this._yTilt.rotation = Vector3.Lerp(\n          this._yTilt.rotation,\n          Player.DOWN_TILT,\n          0.4\n        );\n      } else if (this._input.verticalAxis < 0) {\n        this._yTilt.rotation = Vector3.Lerp(\n          this._yTilt.rotation,\n          Player.ORIGINAL_TILT,\n          0.4\n        );\n      }\n    }\n    //once you've reached the destination area, return back to the original orientation, if they leave rotate it to the previous orientation\n    if (\n      this.mesh.intersectsMesh(this.scene.getMeshByName(\"destinationTrigger\"))\n    ) {\n      if (this._input.verticalAxis > 0) {\n        this._yTilt.rotation = Vector3.Lerp(\n          this._yTilt.rotation,\n          Player.ORIGINAL_TILT,\n          0.4\n        );\n      } else if (this._input.verticalAxis < 0) {\n        this._yTilt.rotation = Vector3.Lerp(\n          this._yTilt.rotation,\n          Player.DOWN_TILT,\n          0.4\n        );\n      }\n    }\n\n    //update camera postion up/down movement\n    let centerPlayer = this.mesh.position.y + 2;\n    this._camRoot.position = Vector3.Lerp(\n      this._camRoot.position,\n      new Vector3(this.mesh.position.x, centerPlayer, this.mesh.position.z),\n      0.4\n    );\n  }\n\n  private _setupPlayerCamera(): UniversalCamera {\n    //root camera parent that handles positioning of the camera to follow the player\n    this._camRoot = new TransformNode(\"root\");\n    this._camRoot.position = new Vector3(0, 0, 0); //initialized at (0,0,0)\n    //to face the player from behind (180 degrees)\n    this._camRoot.rotation = new Vector3(0, Math.PI, 0);\n\n    //rotations along the x-axis (up/down tilting)\n    let yTilt = new TransformNode(\"ytilt\");\n    //adjustments to camera view to point down at our player\n    yTilt.rotation = Player.ORIGINAL_TILT;\n    this._yTilt = yTilt;\n    yTilt.parent = this._camRoot;\n\n    //our actual camera that's pointing at our root's position\n    this.camera = new UniversalCamera(\n      \"cam\",\n      new Vector3(0, 0, -30),\n      this.scene\n    );\n    this.camera.lockedTarget = this._camRoot.position;\n    this.camera.fov = 0.47350045992678597;\n    this.camera.parent = yTilt;\n\n    this.scene.activeCamera = this.camera;\n    return this.camera;\n  }\n\n  private _createSparkles(): void {\n    const sphere = Mesh.CreateSphere(\"sparkles\", 4, 1, this.scene);\n    sphere.position = new Vector3(0, 0, 0);\n    sphere.parent = this.scene.getTransformNodeByName(\"Empty\"); // place particle system at the tip of the sparkler on the player mesh\n    sphere.isVisible = false;\n\n    let particleSystem = new ParticleSystem(\"sparkles\", 1000, this.scene);\n    particleSystem.particleTexture = new Texture(\n      \"textures/flwr.png\",\n      this.scene\n    );\n    particleSystem.emitter = sphere;\n    particleSystem.particleEmitterType = new SphereParticleEmitter(0);\n\n    particleSystem.updateSpeed = 0.014;\n    particleSystem.minAngularSpeed = 0;\n    particleSystem.maxAngularSpeed = 360;\n    particleSystem.minEmitPower = 1;\n    particleSystem.maxEmitPower = 3;\n\n    particleSystem.minSize = 0.5;\n    particleSystem.maxSize = 2;\n    particleSystem.minScaleX = 0.5;\n    particleSystem.minScaleY = 0.5;\n    particleSystem.color1 = new Color4(0.8, 0.8549019607843137, 1, 1);\n    particleSystem.color2 = new Color4(\n      0.8509803921568627,\n      0.7647058823529411,\n      1,\n      1\n    );\n\n    particleSystem.addRampGradient(0, Color3.White());\n    particleSystem.addRampGradient(1, Color3.Black());\n    particleSystem.getRampGradients()[0].color =\n      Color3.FromHexString(\"#BBC1FF\");\n    particleSystem.getRampGradients()[1].color =\n      Color3.FromHexString(\"#FFFFFF\");\n    particleSystem.maxAngularSpeed = 0;\n    particleSystem.maxInitialRotation = 360;\n    particleSystem.minAngularSpeed = -10;\n    particleSystem.maxAngularSpeed = 10;\n\n    particleSystem.start();\n\n    this.sparkler = particleSystem;\n  }\n\n  private _loadSounds(scene: Scene): void {\n    this.lightSfx = new Sound(\n      \"light\",\n      \"./sounds/Rise03.mp3\",\n      scene,\n      function () {}\n    );\n\n    this.sparkResetSfx = new Sound(\n      \"sparkReset\",\n      \"./sounds/Rise04.mp3\",\n      scene,\n      function () {}\n    );\n\n    this._jumpingSfx = new Sound(\n      \"jumping\",\n      \"./sounds/187024__lloydevans09__jump2.wav\",\n      scene,\n      function () {},\n      {\n        volume: 0.25,\n      }\n    );\n\n    this._dashingSfx = new Sound(\n      \"dashing\",\n      \"./sounds/194081__potentjello__woosh-noise-1.wav\",\n      scene,\n      function () {}\n    );\n\n    this._walkingSfx = new Sound(\n      \"walking\",\n      \"./sounds/Concrete 2.wav\",\n      scene,\n      function () {},\n      {\n        loop: true,\n        volume: 0.2,\n        playbackRate: 0.6,\n      }\n    );\n\n    this._resetSfx = new Sound(\n      \"reset\",\n      \"./sounds/Retro Magic Protection 25.wav\",\n      scene,\n      function () {},\n      {\n        volume: 0.25,\n      }\n    );\n  }\n}\n","import \"@babylonjs/core/Debug/debugLayer\";\nimport \"@babylonjs/inspector\";\nimport \"@babylonjs/loaders/glTF\";\n\nimport {\n  Engine,\n  Scene,\n  Vector3,\n  Mesh,\n  Color3,\n  Color4,\n  ShadowGenerator,\n  GlowLayer,\n  PointLight,\n  FreeCamera,\n  CubeTexture,\n  Sound,\n  PostProcess,\n  Effect,\n  SceneLoader,\n  Matrix,\n  MeshBuilder,\n  Quaternion,\n  AssetsManager,\n  EngineFactory,\n} from \"@babylonjs/core\";\nimport { PlayerInput } from \"./inputController\";\nimport { Player } from \"./characterController\";\nimport { Hud } from \"./ui\";\nimport {\n  AdvancedDynamicTexture,\n  StackPanel,\n  Button,\n  TextBlock,\n  Rectangle,\n  Control,\n  Image,\n} from \"@babylonjs/gui\";\nimport { Environment } from \"./environment\";\n\n//enum for states\nenum State {\n  START = 0,\n  GAME = 1,\n  LOSE = 2,\n  CUTSCENE = 3,\n}\n\n// App class is our entire game application\nexport class App {\n  // General Entire Application\n  private _scene: Scene;\n  private _canvas: HTMLCanvasElement;\n  private _engine: Engine;\n\n  //Game State Related\n  public assets: any;\n  private _input: PlayerInput;\n  private _player: Player;\n  private _ui: Hud;\n  private _environment: any;\n\n  //Sounds\n  // public sfx: Sound;\n  public game: Sound;\n  public end: Sound;\n\n  //Scene - related\n  private _state: number = 0;\n  private _gamescene: Scene;\n  private _cutScene: Scene;\n\n  //post process\n  private _transition: boolean = false;\n\n  constructor(canvas: HTMLCanvasElement) {\n    this._canvas = this._createCanvas(canvas);\n\n    // initialize babylon scene and engine\n    this._init();\n  }\n\n  private async _init(): Promise<void> {\n    this._engine = (await EngineFactory.CreateAsync(\n      this._canvas,\n      undefined\n    )) as Engine;\n    this._scene = new Scene(this._engine);\n\n    //**for development: make inspector visible/invisible\n    window.addEventListener(\"keydown\", (ev) => {\n      //Shift+Ctrl+Alt+I\n      if (ev.shiftKey && ev.ctrlKey && ev.altKey && ev.keyCode === 73) {\n        if (this._scene.debugLayer.isVisible()) {\n          this._scene.debugLayer.hide();\n        } else {\n          this._scene.debugLayer.show();\n        }\n      }\n    });\n\n    //MAIN render loop & state machine\n    await this._main();\n  }\n\n  private async _main(): Promise<void> {\n    await this._goToStart();\n\n    // Register a render loop to repeatedly render the scene\n    this._engine.runRenderLoop(() => {\n      switch (this._state) {\n        case State.START:\n          this._scene.render();\n          break;\n        case State.CUTSCENE:\n          this._scene.render();\n          break;\n        case State.GAME:\n          //if 240seconds/ 4mins have have passed, go to the lose state\n          if (this._ui.time >= 240 && !this._player.win) {\n            this._goToLose();\n            this._ui.stopTimer();\n          }\n          if (this._ui.quit) {\n            this._goToStart();\n            this._ui.quit = false;\n          }\n          this._scene.render();\n          break;\n        case State.LOSE:\n          this._scene.render();\n          break;\n        default:\n          break;\n      }\n    });\n\n    //resize if the screen is resized/rotated\n    window.addEventListener(\"resize\", () => {\n      this._engine.resize();\n    });\n  }\n\n  //set up the canvas\n  private _createCanvas(canvas: HTMLCanvasElement): HTMLCanvasElement {\n    //Commented out for development\n    document.documentElement.style[\"overflow\"] = \"hidden\";\n    document.documentElement.style.overflow = \"hidden\";\n    document.documentElement.style.width = \"100%\";\n    document.documentElement.style.height = \"100%\";\n    document.documentElement.style.margin = \"0\";\n    document.documentElement.style.padding = \"0\";\n    document.body.style.overflow = \"hidden\";\n    document.body.style.width = \"100%\";\n    document.body.style.height = \"100%\";\n    document.body.style.margin = \"0\";\n    document.body.style.padding = \"0\";\n\n    //create the canvas html element and attach it to the webpage\n\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    canvas.id = \"gameCanvas\";\n    this._canvas = canvas;\n\n    return canvas;\n  }\n\n  // goToStart\n  private async _goToStart() {\n    this._engine.displayLoadingUI(); //make sure to wait for start to load\n\n    //--SCENE SETUP--\n    //dont detect any inputs from this ui while the game is loading\n    this._scene.detachControl();\n    let scene = new Scene(this._engine);\n    scene.clearColor = new Color4(0, 0, 0, 1);\n    //creates and positions a free camera\n    let camera = new FreeCamera(\"camera1\", new Vector3(0, 0, 0), scene);\n    camera.setTarget(Vector3.Zero()); //targets the camera to scene origin\n\n    //--SOUNDS--\n    const start = new Sound(\n      \"startSong\",\n      \"./sounds/copycat(revised).mp3\",\n      scene,\n      function () {},\n      {\n        volume: 0.25,\n        loop: true,\n        autoplay: true,\n      }\n    );\n    const sfx = new Sound(\n      \"selection\",\n      \"./sounds/vgmenuselect.wav\",\n      scene,\n      function () {}\n    );\n\n    //--GUI--\n    const guiMenu = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n    guiMenu.idealHeight = 720;\n\n    //background image\n    const imageRect = new Rectangle(\"titleContainer\");\n    imageRect.width = 0.8;\n    imageRect.thickness = 0;\n    guiMenu.addControl(imageRect);\n\n    const startbg = new Image(\"startbg\", \"sprites/start.jpeg\");\n    imageRect.addControl(startbg);\n\n    const title = new TextBlock(\"title\", \"SUMMER'S FESTIVAL\");\n    title.resizeToFit = true;\n    title.fontFamily = \"Ceviche One\";\n    title.fontSize = \"64px\";\n    title.color = \"white\";\n    title.resizeToFit = true;\n    title.top = \"14px\";\n    title.width = 0.8;\n    title.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    imageRect.addControl(title);\n\n    const startBtn = Button.CreateSimpleButton(\"start\", \"PLAY\");\n    startBtn.fontFamily = \"Viga\";\n    startBtn.width = 0.2;\n    startBtn.height = \"40px\";\n    startBtn.color = \"white\";\n    startBtn.top = \"-14px\";\n    startBtn.thickness = 0;\n    startBtn.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n    imageRect.addControl(startBtn);\n\n    //set up transition effect : modified version of https://www.babylonjs-playground.com/#2FGYE8#0\n    Effect.RegisterShader(\n      \"fade\",\n      \"precision highp float;\" +\n        \"varying vec2 vUV;\" +\n        \"uniform sampler2D textureSampler; \" +\n        \"uniform float fadeLevel; \" +\n        \"void main(void){\" +\n        \"vec4 baseColor = texture2D(textureSampler, vUV) * fadeLevel;\" +\n        \"baseColor.a = 1.0;\" +\n        \"gl_FragColor = baseColor;\" +\n        \"}\"\n    );\n\n    let fadeLevel = 1.0;\n    this._transition = false;\n    scene.registerBeforeRender(() => {\n      if (this._transition) {\n        fadeLevel -= 0.05;\n        if (fadeLevel <= 0) {\n          this._goToCutScene();\n          this._transition = false;\n        }\n      }\n    });\n\n    //this handles interactions with the start button attached to the scene\n    startBtn.onPointerDownObservable.add(() => {\n      //fade screen\n      const postProcess = new PostProcess(\n        \"Fade\",\n        \"fade\",\n        [\"fadeLevel\"],\n        null,\n        1.0,\n        camera\n      );\n      postProcess.onApply = (effect) => {\n        effect.setFloat(\"fadeLevel\", fadeLevel);\n      };\n      this._transition = true;\n      //sounds\n      sfx.play();\n\n      scene.detachControl(); //observables disabled\n    });\n\n    let isMobile = false;\n    //--MOBILE--\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      )\n    ) {\n      isMobile = true;\n      //popup for mobile to rotate screen\n      const rect1 = new Rectangle();\n      rect1.height = 0.2;\n      rect1.width = 0.3;\n      rect1.verticalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n      rect1.horizontalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n      rect1.background = \"white\";\n      rect1.alpha = 0.8;\n      guiMenu.addControl(rect1);\n\n      const rect = new Rectangle();\n      rect.height = 0.2;\n      rect.width = 0.3;\n      rect.verticalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n      rect.horizontalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n      rect.color = \"whites\";\n      guiMenu.addControl(rect);\n\n      const stackPanel = new StackPanel();\n      stackPanel.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n      rect.addControl(stackPanel);\n\n      //image\n      const image = new Image(\"rotate\", \"./sprites/rotate.png\");\n      image.width = 0.4;\n      image.height = 0.6;\n      image.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n      rect.addControl(image);\n\n      //alert message\n      const alert = new TextBlock(\n        \"alert\",\n        \"For the best experience, please rotate your device\"\n      );\n      alert.fontSize = \"16px\";\n      alert.fontFamily = \"Viga\";\n      alert.color = \"black\";\n      alert.resizeToFit = true;\n      alert.textWrapping = true;\n      stackPanel.addControl(alert);\n\n      const closealert = Button.CreateSimpleButton(\"close\", \"X\");\n      closealert.height = \"24px\";\n      closealert.width = \"24px\";\n      closealert.color = \"black\";\n      stackPanel.addControl(closealert);\n\n      //remove control of the play button until the user closes the notification(allowing for fullscreen mode)\n      startBtn.isHitTestVisible = false;\n\n      closealert.onPointerUpObservable.add(() => {\n        guiMenu.removeControl(rect);\n        guiMenu.removeControl(rect1);\n\n        startBtn.isHitTestVisible = true;\n        this._engine.enterFullscreen(true);\n      });\n    }\n\n    //--SCENE FINISHED LOADING--\n    await scene.whenReadyAsync();\n    this._engine.hideLoadingUI(); //when the scene is ready, hide loading\n    //lastly set the current state to the start state and set the scene to the start scene\n    this._scene.dispose();\n    this._scene = scene;\n    this._state = State.START;\n  }\n\n  private async _goToCutScene(): Promise<void> {\n    this._engine.displayLoadingUI();\n    //--SETUP SCENE--\n    //dont detect any inputs from this ui while the game is loading\n    this._scene.detachControl();\n    this._cutScene = new Scene(this._engine);\n    let camera = new FreeCamera(\n      \"camera1\",\n      new Vector3(0, 0, 0),\n      this._cutScene\n    );\n    camera.setTarget(Vector3.Zero());\n    this._cutScene.clearColor = new Color4(0, 0, 0, 1);\n\n    //--GUI--\n    const cutScene = AdvancedDynamicTexture.CreateFullscreenUI(\"cutscene\");\n    let transition = 0; //increment based on dialogue\n    let canplay = false;\n    let finished_anim = false;\n    let anims_loaded = 0;\n\n    //Animations\n    const beginning_anim = new Image(\n      \"sparkLife\",\n      \"./sprites/beginning_anim.png\"\n    );\n    beginning_anim.stretch = Image.STRETCH_UNIFORM;\n    beginning_anim.cellId = 0;\n    beginning_anim.cellHeight = 480;\n    beginning_anim.cellWidth = 480;\n    beginning_anim.sourceWidth = 480;\n    beginning_anim.sourceHeight = 480;\n    cutScene.addControl(beginning_anim);\n    beginning_anim.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n    const working_anim = new Image(\"sparkLife\", \"./sprites/working_anim.png\");\n    working_anim.stretch = Image.STRETCH_UNIFORM;\n    working_anim.cellId = 0;\n    working_anim.cellHeight = 480;\n    working_anim.cellWidth = 480;\n    working_anim.sourceWidth = 480;\n    working_anim.sourceHeight = 480;\n    working_anim.isVisible = false;\n    cutScene.addControl(working_anim);\n    working_anim.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n    const dropoff_anim = new Image(\"sparkLife\", \"./sprites/dropoff_anim.png\");\n    dropoff_anim.stretch = Image.STRETCH_UNIFORM;\n    dropoff_anim.cellId = 0;\n    dropoff_anim.cellHeight = 480;\n    dropoff_anim.cellWidth = 480;\n    dropoff_anim.sourceWidth = 480;\n    dropoff_anim.sourceHeight = 480;\n    dropoff_anim.isVisible = false;\n    cutScene.addControl(dropoff_anim);\n    dropoff_anim.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n    const leaving_anim = new Image(\"sparkLife\", \"./sprites/leaving_anim.png\");\n    leaving_anim.stretch = Image.STRETCH_UNIFORM;\n    leaving_anim.cellId = 0;\n    leaving_anim.cellHeight = 480;\n    leaving_anim.cellWidth = 480;\n    leaving_anim.sourceWidth = 480;\n    leaving_anim.sourceHeight = 480;\n    leaving_anim.isVisible = false;\n    cutScene.addControl(leaving_anim);\n    leaving_anim.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n    const watermelon_anim = new Image(\n      \"sparkLife\",\n      \"./sprites/watermelon_anim.png\"\n    );\n    watermelon_anim.stretch = Image.STRETCH_UNIFORM;\n    watermelon_anim.cellId = 0;\n    watermelon_anim.cellHeight = 480;\n    watermelon_anim.cellWidth = 480;\n    watermelon_anim.sourceWidth = 480;\n    watermelon_anim.sourceHeight = 480;\n    watermelon_anim.isVisible = false;\n    cutScene.addControl(watermelon_anim);\n    watermelon_anim.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n    const reading_anim = new Image(\"sparkLife\", \"./sprites/reading_anim.png\");\n    reading_anim.stretch = Image.STRETCH_UNIFORM;\n    reading_anim.cellId = 0;\n    reading_anim.cellHeight = 480;\n    reading_anim.cellWidth = 480;\n    reading_anim.sourceWidth = 480;\n    reading_anim.sourceHeight = 480;\n    reading_anim.isVisible = false;\n    cutScene.addControl(reading_anim);\n    reading_anim.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n\n    //Dialogue animations\n    const dialogueBg = new Image(\n      \"sparkLife\",\n      \"./sprites/bg_anim_text_dialogue.png\"\n    );\n    dialogueBg.stretch = Image.STRETCH_UNIFORM;\n    dialogueBg.cellId = 0;\n    dialogueBg.cellHeight = 480;\n    dialogueBg.cellWidth = 480;\n    dialogueBg.sourceWidth = 480;\n    dialogueBg.sourceHeight = 480;\n    dialogueBg.horizontalAlignment = 0;\n    dialogueBg.verticalAlignment = 0;\n    dialogueBg.isVisible = false;\n    cutScene.addControl(dialogueBg);\n    dialogueBg.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n\n    const dialogue = new Image(\"sparkLife\", \"./sprites/text_dialogue.png\");\n    dialogue.stretch = Image.STRETCH_UNIFORM;\n    dialogue.cellId = 0;\n    dialogue.cellHeight = 480;\n    dialogue.cellWidth = 480;\n    dialogue.sourceWidth = 480;\n    dialogue.sourceHeight = 480;\n    dialogue.horizontalAlignment = 0;\n    dialogue.verticalAlignment = 0;\n    dialogue.isVisible = false;\n    cutScene.addControl(dialogue);\n    dialogue.onImageLoadedObservable.add(() => {\n      anims_loaded++;\n    });\n\n    //looping animation for the dialogue background\n    let dialogueTimer = setInterval(() => {\n      if (finished_anim && dialogueBg.cellId < 3) {\n        dialogueBg.cellId++;\n      } else {\n        dialogueBg.cellId = 0;\n      }\n    }, 250);\n\n    //skip cutscene\n    const skipBtn = Button.CreateSimpleButton(\"skip\", \"SKIP\");\n    skipBtn.fontFamily = \"Viga\";\n    skipBtn.width = \"45px\";\n    skipBtn.left = \"-14px\";\n    skipBtn.height = \"40px\";\n    skipBtn.color = \"white\";\n    skipBtn.top = \"14px\";\n    skipBtn.thickness = 0;\n    skipBtn.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    skipBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    cutScene.addControl(skipBtn);\n\n    skipBtn.onPointerDownObservable.add(() => {\n      this._cutScene.detachControl();\n      clearInterval(animTimer);\n      clearInterval(anim2Timer);\n      clearInterval(dialogueTimer);\n      this._engine.displayLoadingUI();\n      canplay = true;\n    });\n\n    //--PLAYING ANIMATIONS--\n    let animTimer: string | number | NodeJS.Timer | undefined;\n    let anim2Timer: string | number | NodeJS.Timer | undefined;\n    let anim = 1; //keeps track of which animation we're playing\n    //sets up the state machines for animations\n    this._cutScene.onBeforeRenderObservable.add(() => {\n      if (anims_loaded == 8) {\n        this._engine.hideLoadingUI();\n        anims_loaded = 0;\n\n        //animation sequence\n        animTimer = setInterval(() => {\n          switch (anim) {\n            case 1:\n              if (beginning_anim.cellId == 9) {\n                //each animation could have a different number of frames\n                anim++;\n                beginning_anim.isVisible = false; // current animation hidden\n                working_anim.isVisible = true; // show the next animation\n              } else {\n                beginning_anim.cellId++;\n              }\n              break;\n            case 2:\n              if (working_anim.cellId == 11) {\n                anim++;\n                working_anim.isVisible = false;\n                dropoff_anim.isVisible = true;\n              } else {\n                working_anim.cellId++;\n              }\n              break;\n            case 3:\n              if (dropoff_anim.cellId == 11) {\n                anim++;\n                dropoff_anim.isVisible = false;\n                leaving_anim.isVisible = true;\n              } else {\n                dropoff_anim.cellId++;\n              }\n              break;\n            case 4:\n              if (leaving_anim.cellId == 9) {\n                anim++;\n                leaving_anim.isVisible = false;\n                watermelon_anim.isVisible = true;\n              } else {\n                leaving_anim.cellId++;\n              }\n              break;\n            default:\n              break;\n          }\n        }, 250);\n\n        //animation sequence 2 that uses a different time interval\n        anim2Timer = setInterval(() => {\n          switch (anim) {\n            case 5:\n              if (watermelon_anim.cellId == 8) {\n                anim++;\n                watermelon_anim.isVisible = false;\n                reading_anim.isVisible = true;\n              } else {\n                watermelon_anim.cellId++;\n              }\n              break;\n            case 6:\n              if (reading_anim.cellId == 11) {\n                reading_anim.isVisible = false;\n                finished_anim = true;\n                dialogueBg.isVisible = true;\n                dialogue.isVisible = true;\n                next.isVisible = true;\n              } else {\n                reading_anim.cellId++;\n              }\n              break;\n          }\n        }, 750);\n      }\n\n      //only once all of the game assets have finished loading and you've completed the animation sequence + dialogue can you go to the game state\n      if (finishedLoading && canplay) {\n        canplay = false;\n        this._goToGame();\n      }\n    });\n\n    //--PROGRESS DIALOGUE--\n    const next = Button.CreateImageOnlyButton(\"next\", \"./sprites/arrowBtn.png\");\n    next.rotation = Math.PI / 2;\n    next.thickness = 0;\n    next.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n    next.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    next.width = \"64px\";\n    next.height = \"64px\";\n    next.top = \"-3%\";\n    next.left = \"-12%\";\n    next.isVisible = false;\n    cutScene.addControl(next);\n\n    next.onPointerUpObservable.add(() => {\n      if (transition == 8) {\n        //once we reach the last dialogue frame, goToGame\n        this._cutScene.detachControl();\n        this._engine.displayLoadingUI(); //if the game hasn't loaded yet, we'll see a loading screen\n        transition = 0;\n        canplay = true;\n      } else if (transition < 8) {\n        // 8 frames of dialogue\n        transition++;\n        dialogue.cellId++;\n      }\n    });\n\n    //--WHEN SCENE IS FINISHED LOADING--\n    await this._cutScene.whenReadyAsync();\n    this._scene.dispose();\n    this._state = State.CUTSCENE;\n    this._scene = this._cutScene;\n\n    //--START LOADING AND SETTING UP THE GAME DURING THIS SCENE--\n    var finishedLoading = false;\n    await this._setUpGame().then((res) => {\n      finishedLoading = true;\n    });\n  }\n\n  private async _setUpGame() {\n    //async\n    //--CREATE SCENE--\n    let scene = new Scene(this._engine);\n    this._gamescene = scene;\n\n    //--SOUNDS--\n    this._loadSounds(scene);\n\n    //--CREATE ENVIRONMENT--\n    const environment = new Environment(scene);\n    this._environment = environment;\n    //Load environment and character assets\n    await this._environment.load(); //environment\n    await this._loadCharacterAssets(scene); //character\n  }\n\n  //loading sounds for the game scene\n  private _loadSounds(scene: Scene): void {\n    this.game = new Sound(\n      \"gameSong\",\n      \"./sounds/Christmassynths.wav\",\n      scene,\n      function () {},\n      {\n        loop: true,\n        volume: 0.1,\n      }\n    );\n\n    this.end = new Sound(\n      \"endSong\",\n      \"./sounds/copycat(revised).mp3\",\n      scene,\n      function () {},\n      {\n        volume: 0.25,\n      }\n    );\n  }\n\n  //goToGame\n  private async _goToGame(): Promise<void> {\n    //--SETUP SCENE--\n    this._scene.detachControl();\n    let scene = this._gamescene;\n\n    //--GUI--\n    const ui = new Hud(scene);\n    this._ui = ui;\n    //dont detect any inputs from this ui while the game is loading\n    scene.detachControl();\n\n    //IBL (image based lighting) - to give scene an ambient light\n    const envHdri = CubeTexture.CreateFromPrefilteredData(\n      \"textures/envtext.env\",\n      scene\n    );\n    envHdri.name = \"env\";\n    envHdri.gammaSpace = false;\n    scene.environmentTexture = envHdri;\n    scene.environmentIntensity = 0.04;\n\n    //--INPUT--\n    this._input = new PlayerInput(scene, this._ui); //detect keyboard/mobile inputs\n\n    //Initializes the game's loop\n    await this._initializeGameAsync(scene); //handles scene related updates & setting up meshes in scene\n\n    //--WHEN SCENE FINISHED LOADING--\n    await scene.whenReadyAsync();\n\n    //Actions to complete once the game loop is setup\n    scene.getMeshByName(\"outer\").position = scene\n      .getTransformNodeByName(\"startPosition\")\n      .getAbsolutePosition(); //move the player to the start position\n    //set up the game timer and sparkler timer -- linked to the ui\n    this._ui.startTimer();\n    this._ui.startSparklerTimer(this._player.sparkler);\n\n    //get rid of start scene, switch to gamescene and change states\n    this._scene.dispose();\n    this._state = State.GAME;\n    this._scene = scene;\n    this._engine.hideLoadingUI();\n    //the game is ready, attach control back\n    this._scene.attachControl();\n\n    //--SOUNDS--\n    this.game.play(); // play the gamesong\n  }\n\n  private _showWin(): void {\n    //stop game sound and play end song\n    this.game.dispose();\n    this.end.play();\n    this._player.onRun.clear();\n\n    const winUI = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n    winUI.idealHeight = 720;\n\n    const rect = new Rectangle();\n    rect.thickness = 0;\n    rect.background = \"black\";\n    rect.alpha = 0.4;\n    rect.width = 0.4;\n    winUI.addControl(rect);\n\n    const stackPanel = new StackPanel(\"credits\");\n    stackPanel.width = 0.4;\n    stackPanel.fontFamily = \"Viga\";\n    stackPanel.fontSize = \"16px\";\n    stackPanel.color = \"white\";\n    winUI.addControl(stackPanel);\n\n    const wincreds = new TextBlock(\"special\");\n    wincreds.resizeToFit = true;\n    wincreds.color = \"white\";\n    wincreds.text = \"Special thanks to the Babylon Team!\";\n    wincreds.textWrapping = true;\n    wincreds.height = \"24px\";\n    wincreds.width = \"100%\";\n    wincreds.fontFamily = \"Viga\";\n    stackPanel.addControl(wincreds);\n\n    //Credits for music & SFX\n    const music = new TextBlock(\"music\", \"Music\");\n    music.fontSize = 22;\n    music.resizeToFit = true;\n    music.textWrapping = true;\n\n    const source = new TextBlock(\n      \"sources\",\n      \"Sources: freesound.org, opengameart.org, and itch.io\"\n    );\n    source.textWrapping = true;\n    source.resizeToFit = true;\n\n    const jumpCred = new TextBlock(\n      \"jumpCred\",\n      \"jump2 by LloydEvans09 - freesound.org\"\n    );\n    jumpCred.textWrapping = true;\n    jumpCred.resizeToFit = true;\n\n    const walkCred = new TextBlock(\n      \"walkCred\",\n      \"Concrete 2 by MayaSama @mayasama.itch.io / ig: @mayaragandra\"\n    );\n    walkCred.textWrapping = true;\n    walkCred.resizeToFit = true;\n\n    const gameCred = new TextBlock(\n      \"gameSong\",\n      \"Christmas synths by 3xBlast - opengameart.org\"\n    );\n    gameCred.textWrapping = true;\n    gameCred.resizeToFit = true;\n\n    const pauseCred = new TextBlock(\n      \"pauseSong\",\n      \"Music by Matthew Pablo / www.matthewpablo.com - opengameart.org\"\n    );\n    pauseCred.textWrapping = true;\n    pauseCred.resizeToFit = true;\n\n    const endCred = new TextBlock(\n      \"startendSong\",\n      \"copycat by syncopika - opengameart.org\"\n    );\n    endCred.textWrapping = true;\n    endCred.resizeToFit = true;\n\n    const loseCred = new TextBlock(\n      \"loseSong\",\n      \"Eye of the Storm by Joth - opengameart.org\"\n    );\n    loseCred.textWrapping = true;\n    loseCred.resizeToFit = true;\n\n    const fireworksSfx = new TextBlock(\n      \"fireworks\",\n      \"rubberduck - opengameart.org\"\n    );\n    fireworksSfx.textWrapping = true;\n    fireworksSfx.resizeToFit = true;\n\n    const dashCred = new TextBlock(\n      \"dashCred\",\n      \"Woosh Noise 1 by potentjello - freesound.org\"\n    );\n    dashCred.textWrapping = true;\n    dashCred.resizeToFit = true;\n\n    //quit, sparkwarning, reset\n    const sfxCred = new TextBlock(\n      \"sfxCred\",\n      \"200 Free SFX - https://kronbits.itch.io/freesfx\"\n    );\n    sfxCred.textWrapping = true;\n    sfxCred.resizeToFit = true;\n\n    //lighting lantern, sparkreset\n    const sfxCred2 = new TextBlock(\n      \"sfxCred2\",\n      \"sound pack by wobbleboxx.com - opengameart.org\"\n    );\n    sfxCred2.textWrapping = true;\n    sfxCred2.resizeToFit = true;\n\n    const selectionSfxCred = new TextBlock(\n      \"select\",\n      \"8bit menu select by Fupi - opengameart.org\"\n    );\n    selectionSfxCred.textWrapping = true;\n    selectionSfxCred.resizeToFit = true;\n\n    stackPanel.addControl(music);\n    stackPanel.addControl(source);\n    stackPanel.addControl(jumpCred);\n    stackPanel.addControl(walkCred);\n    stackPanel.addControl(gameCred);\n    stackPanel.addControl(pauseCred);\n    stackPanel.addControl(endCred);\n    stackPanel.addControl(loseCred);\n    stackPanel.addControl(fireworksSfx);\n    stackPanel.addControl(dashCred);\n    stackPanel.addControl(sfxCred);\n    stackPanel.addControl(sfxCred2);\n    stackPanel.addControl(selectionSfxCred);\n\n    const mainMenu = Button.CreateSimpleButton(\"mainmenu\", \"RETURN\");\n    mainMenu.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n    mainMenu.fontFamily = \"Viga\";\n    mainMenu.width = 0.2;\n    mainMenu.height = \"40px\";\n    mainMenu.color = \"white\";\n    winUI.addControl(mainMenu);\n\n    mainMenu.onPointerDownObservable.add(() => {\n      this._ui.transition = true;\n      this._ui.quitSfx.play();\n    });\n  }\n\n  private async _goToLose(): Promise<void> {\n    this._engine.displayLoadingUI();\n\n    //--SCENE SETUP--\n    this._scene.detachControl();\n    let scene = new Scene(this._engine);\n    scene.clearColor = new Color4(0, 0, 0, 1);\n    let camera = new FreeCamera(\"camera1\", new Vector3(0, 0, 0), scene);\n    camera.setTarget(Vector3.Zero());\n\n    //--SOUNDS--\n    const start = new Sound(\n      \"loseSong\",\n      \"./sounds/Eye of the Storm.mp3\",\n      scene,\n      function () {},\n      {\n        volume: 0.25,\n        loop: true,\n        autoplay: true,\n      }\n    );\n    const sfx = new Sound(\n      \"selection\",\n      \"./sounds/vgmenuselect.wav\",\n      scene,\n      function () {}\n    );\n\n    //--GUI--\n    const guiMenu = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n    guiMenu.idealHeight = 720;\n\n    //background image\n    const image = new Image(\"lose\", \"sprites/lose.jpeg\");\n    image.autoScale = true;\n    guiMenu.addControl(image);\n\n    const panel = new StackPanel();\n    guiMenu.addControl(panel);\n\n    const text = new TextBlock();\n    text.fontSize = 24;\n    text.color = \"white\";\n    text.height = \"100px\";\n    text.width = \"100%\";\n    panel.addControl(text);\n\n    text.textHorizontalAlignment = TextBlock.HORIZONTAL_ALIGNMENT_CENTER;\n    text.textVerticalAlignment = TextBlock.VERTICAL_ALIGNMENT_CENTER;\n    text.text = \"There's no fireworks this year\";\n    const dots = new TextBlock();\n    dots.color = \"white\";\n    dots.fontSize = 24;\n    dots.height = \"100px\";\n    dots.width = \"100%\";\n    dots.text = \"....\";\n\n    const mainBtn = Button.CreateSimpleButton(\"mainmenu\", \"MAIN MENU\");\n    mainBtn.width = 0.2;\n    mainBtn.height = \"40px\";\n    mainBtn.color = \"white\";\n    panel.addControl(mainBtn);\n\n    //set up transition effect : modified version of https://www.babylonjs-playground.com/#2FGYE8#0\n    Effect.RegisterShader(\n      \"fade\",\n      \"precision highp float;\" +\n        \"varying vec2 vUV;\" +\n        \"uniform sampler2D textureSampler; \" +\n        \"uniform float fadeLevel; \" +\n        \"void main(void){\" +\n        \"vec4 baseColor = texture2D(textureSampler, vUV) * fadeLevel;\" +\n        \"baseColor.a = 1.0;\" +\n        \"gl_FragColor = baseColor;\" +\n        \"}\"\n    );\n\n    let fadeLevel = 1.0;\n    this._transition = false;\n    scene.registerBeforeRender(() => {\n      if (this._transition) {\n        fadeLevel -= 0.05;\n        if (fadeLevel <= 0) {\n          this._goToStart();\n          this._transition = false;\n        }\n      }\n    });\n\n    //this handles interactions with the start button attached to the scene\n    mainBtn.onPointerUpObservable.add(() => {\n      //todo: add fade transition & selection sfx\n      scene.detachControl();\n      guiMenu.dispose();\n\n      this._transition = true;\n      sfx.play();\n    });\n\n    //--SCENE FINISHED LOADING--\n    await scene.whenReadyAsync();\n    this._engine.hideLoadingUI(); //when the scene is ready, hide loading\n    //lastly set the current state to the lose state and set the scene to the lose scene\n    this._scene.dispose();\n    this._scene = scene;\n    this._state = State.LOSE;\n  }\n\n  //load the character model\n  private async _loadCharacterAssets(scene: Scene): Promise<any> {\n    async function loadCharacter() {\n      //collision mesh\n      const outer = MeshBuilder.CreateBox(\n        \"outer\",\n        { width: 2, depth: 1, height: 3 },\n        scene\n      );\n      outer.isVisible = false;\n      outer.isPickable = false;\n      outer.checkCollisions = true;\n\n      //move origin of box collider to the bottom of the mesh (to match player mesh)\n      outer.bakeTransformIntoVertices(Matrix.Translation(0, 1.5, 0));\n      //for collisions\n      outer.ellipsoid = new Vector3(1, 1.5, 1);\n      outer.ellipsoidOffset = new Vector3(0, 1.5, 0);\n\n      outer.rotationQuaternion = new Quaternion(0, 1, 0, 0); // rotate the player mesh 180 since we want to see the back of the player\n\n      //--IMPORTING MESH--\n      return SceneLoader.ImportMeshAsync(\n        null,\n        \"./models/\",\n        \"player.glb\",\n        scene\n      ).then((result) => {\n        const root = result.meshes[0];\n        //body is our actual player mesh\n        const body = root;\n        body.parent = outer;\n        body.isPickable = false;\n        body.getChildMeshes().forEach((m) => {\n          m.isPickable = false;\n        });\n\n        //return the mesh and animations\n        return {\n          mesh: outer as Mesh,\n          animationGroups: result.animationGroups,\n        };\n      });\n    }\n\n    return loadCharacter().then((assets) => {\n      this.assets = assets;\n    });\n  }\n\n  //init game\n  private async _initializeGameAsync(scene: Scene): Promise<void> {\n    scene.ambientColor = new Color3(\n      0.34509803921568627,\n      0.5568627450980392,\n      0.8352941176470589\n    );\n    scene.clearColor = new Color4(\n      0.01568627450980392,\n      0.01568627450980392,\n      0.20392156862745098\n    );\n\n    const light = new PointLight(\"sparklight\", new Vector3(0, 0, 0), scene);\n    light.diffuse = new Color3(\n      0.08627450980392157,\n      0.10980392156862745,\n      0.15294117647058825\n    );\n    light.intensity = 35;\n    light.radius = 1;\n\n    const shadowGenerator = new ShadowGenerator(1024, light);\n    shadowGenerator.darkness = 0.4;\n\n    //Create the player\n    this._player = new Player(this.assets, scene, shadowGenerator, this._input);\n\n    const camera = this._player.activatePlayerCamera();\n\n    //set up lantern collision checks\n    this._environment.checkLanterns(this._player);\n\n    //--Transition post process--\n    scene.registerBeforeRender(() => {\n      if (this._ui.transition) {\n        this._ui.fadeLevel -= 0.05;\n\n        //once the fade transition has complete, switch scenes\n        if (this._ui.fadeLevel <= 0) {\n          this._ui.quit = true;\n          this._ui.transition = false;\n        }\n      }\n    });\n\n    //--GAME LOOP--\n    scene.onBeforeRenderObservable.add(() => {\n      //reset the sparkler timer\n      if (this._player.sparkReset) {\n        this._ui.startSparklerTimer(this._player.sparkler);\n        this._player.sparkReset = false;\n\n        this._ui.updateLanternCount(this._player.lanternsLit);\n      }\n      //stop the sparkler timer after 20 seconds\n      else if (this._ui.stopSpark && this._player.sparkLit) {\n        this._ui.stopSparklerTimer(this._player.sparkler);\n        this._player.sparkLit = false;\n      }\n\n      //if you've reached the destination and lit all the lanterns\n      if (this._player.win && this._player.lanternsLit == 22) {\n        this._ui.gamePaused = true; //stop the timer so that fireworks can play and player cant move around\n        //dont allow pause menu interaction\n        this._ui.pauseBtn.isHitTestVisible = false;\n\n        let i = 10; //10 seconds\n        window.setInterval(() => {\n          i--;\n          if (i == 0) {\n            this._showWin();\n          }\n        }, 1000);\n\n        this._environment._startFireworks = true;\n        this._player.win = false;\n      }\n\n      if (!this._ui.gamePaused) {\n        this._ui.updateHud();\n      }\n      //if the player has attempted all tutorial moves, move on to the hint IF they haven't already lit the next lantern\n      if (\n        this._player.tutorial_move &&\n        this._player.tutorial_jump &&\n        this._player.tutorial_dash &&\n        (this._ui.tutorial.isVisible || this._ui.hint.isVisible)\n      ) {\n        this._ui.tutorial.isVisible = false;\n        if (!this._environment._lanternObjs[1].isLit) {\n          // if the first lantern hasn't been lit, then give hint as to which direction to go\n          this._ui.hint.isVisible = true;\n        } else {\n          this._ui.hint.isVisible = false;\n        }\n      }\n    });\n    //glow layer\n    const gl = new GlowLayer(\"glow\", scene);\n    gl.intensity = 0.4;\n    this._environment._lanternObjs.forEach((lantern: { mesh: Mesh }) => {\n      gl.addIncludedOnlyMesh(lantern.mesh);\n    });\n    //webpack served from public\n  }\n}\n","import {\n  TextBlock,\n  StackPanel,\n  AdvancedDynamicTexture,\n  Image,\n  Button,\n  Rectangle,\n  Control,\n  Grid,\n} from \"@babylonjs/gui\";\nimport {\n  Scene,\n  Sound,\n  ParticleSystem,\n  PostProcess,\n  Effect,\n  SceneSerializer,\n} from \"@babylonjs/core\";\n\nexport class Hud {\n  private _scene: Scene;\n\n  //Game Timer\n  public time: number; //keep track to signal end game REAL TIME\n  private _prevTime: number = 0;\n  private _clockTime: TextBlock = null; //GAME TIME\n  private _startTime: number;\n  private _stopTimer: boolean;\n  private _sString = \"00\";\n  private _mString = 11;\n  private _lanternCnt: TextBlock;\n\n  //Animated UI sprites\n  private _sparklerLife: Image;\n  private _spark: Image;\n\n  //Timer handlers\n  public stopSpark: boolean;\n  private _handle: string | number | NodeJS.Timer;\n  private _sparkhandle: string | number | NodeJS.Timer;\n\n  //Pause toggle\n  public gamePaused: boolean;\n\n  //Quit game\n  public quit: boolean;\n  public transition: boolean = false;\n\n  //UI Elements\n  public pauseBtn: Button;\n  public fadeLevel: number;\n  private _playerUI;\n  private _pauseMenu: Control;\n  private _controls: Rectangle;\n  public tutorial;\n  public hint;\n\n  //Mobile\n  public isMobile: boolean;\n  public jumpBtn: Button;\n  public dashBtn: Button;\n  public leftBtn: Button;\n  public rightBtn: Button;\n  public upBtn: Button;\n  public downBtn: Button;\n\n  //Sounds\n  public quitSfx: Sound;\n  private _sfx: Sound;\n  private _pause: Sound;\n  private _sparkWarningSfx: Sound;\n\n  constructor(scene: Scene) {\n    this._scene = scene;\n\n    const playerUI = AdvancedDynamicTexture.CreateFullscreenUI(\"UI\");\n    this._playerUI = playerUI;\n    this._playerUI.idealHeight = 720;\n\n    const lanternCnt = new TextBlock();\n    lanternCnt.name = \"lantern count\";\n    lanternCnt.textVerticalAlignment = TextBlock.VERTICAL_ALIGNMENT_CENTER;\n    lanternCnt.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    lanternCnt.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    lanternCnt.fontSize = \"22px\";\n    lanternCnt.color = \"white\";\n    lanternCnt.text = \"Lanterns: 1 / 22\";\n    lanternCnt.top = \"32px\";\n    lanternCnt.left = \"-64px\";\n    lanternCnt.width = \"25%\";\n    lanternCnt.fontFamily = \"Viga\";\n    lanternCnt.resizeToFit = true;\n    playerUI.addControl(lanternCnt);\n    this._lanternCnt = lanternCnt;\n\n    const stackPanel = new StackPanel();\n    stackPanel.height = \"100%\";\n    stackPanel.width = \"100%\";\n    stackPanel.top = \"14px\";\n    stackPanel.verticalAlignment = 0;\n    playerUI.addControl(stackPanel);\n\n    //Game timer text\n    const clockTime = new TextBlock();\n    clockTime.name = \"clock\";\n    clockTime.textHorizontalAlignment = TextBlock.HORIZONTAL_ALIGNMENT_CENTER;\n    clockTime.fontSize = \"48px\";\n    clockTime.color = \"white\";\n    clockTime.text = \"11:00\";\n    clockTime.resizeToFit = true;\n    clockTime.height = \"96px\";\n    clockTime.width = \"220px\";\n    clockTime.fontFamily = \"Viga\";\n    stackPanel.addControl(clockTime);\n    this._clockTime = clockTime;\n\n    //sparkler bar animation\n    const sparklerLife = new Image(\"sparkLife\", \"./sprites/sparkLife.png\");\n    sparklerLife.width = \"54px\";\n    sparklerLife.height = \"162px\";\n    sparklerLife.cellId = 0;\n    sparklerLife.cellHeight = 108;\n    sparklerLife.cellWidth = 36;\n    sparklerLife.sourceWidth = 36;\n    sparklerLife.sourceHeight = 108;\n    sparklerLife.horizontalAlignment = 0;\n    sparklerLife.verticalAlignment = 0;\n    sparklerLife.left = \"14px\";\n    sparklerLife.top = \"14px\";\n    playerUI.addControl(sparklerLife);\n    this._sparklerLife = sparklerLife;\n\n    const spark = new Image(\"spark\", \"./sprites/spark.png\");\n    spark.width = \"40px\";\n    spark.height = \"40px\";\n    spark.cellId = 0;\n    spark.cellHeight = 20;\n    spark.cellWidth = 20;\n    spark.sourceWidth = 20;\n    spark.sourceHeight = 20;\n    spark.horizontalAlignment = 0;\n    spark.verticalAlignment = 0;\n    spark.left = \"21px\";\n    spark.top = \"20px\";\n    playerUI.addControl(spark);\n    this._spark = spark;\n\n    const pauseBtn = Button.CreateImageOnlyButton(\n      \"pauseBtn\",\n      \"./sprites/pauseBtn.png\"\n    );\n    pauseBtn.width = \"48px\";\n    pauseBtn.height = \"86px\";\n    pauseBtn.thickness = 0;\n    pauseBtn.verticalAlignment = 0;\n    pauseBtn.horizontalAlignment = 1;\n    pauseBtn.top = \"-16px\";\n    playerUI.addControl(pauseBtn);\n    pauseBtn.zIndex = 10;\n    this.pauseBtn = pauseBtn;\n    //when the button is down, make pause menu visable and add control to it\n    pauseBtn.onPointerDownObservable.add(() => {\n      this._pauseMenu.isVisible = true;\n      playerUI.addControl(this._pauseMenu);\n      this.pauseBtn.isHitTestVisible = false;\n\n      //when game is paused, make sure that the next start time is the time it was when paused\n      this.gamePaused = true;\n      this._prevTime = this.time;\n\n      //--SOUNDS--\n      this._scene.getSoundByName(\"gameSong\").pause();\n      this._pause.play(); //play pause music\n    });\n\n    //popup tutorials + hint\n    const tutorial = new Rectangle();\n    tutorial.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    tutorial.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    tutorial.top = \"12%\";\n    tutorial.left = \"-1%\";\n    tutorial.height = 0.2;\n    tutorial.width = 0.2;\n    tutorial.thickness = 0;\n    tutorial.alpha = 0.6;\n    this._playerUI.addControl(tutorial);\n    this.tutorial = tutorial;\n    //movement image, will disappear once you attempt all of the moves\n    let movementPC = new Image(\"pause\", \"sprites/tutorial.jpeg\");\n    tutorial.addControl(movementPC);\n\n    const hint = new Rectangle();\n    hint.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    hint.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    hint.top = \"14%\";\n    hint.left = \"-4%\";\n    hint.height = 0.08;\n    hint.width = 0.08;\n    hint.thickness = 0;\n    hint.alpha = 0.6;\n    hint.isVisible = false;\n    this._playerUI.addControl(hint);\n    this.hint = hint;\n    //hint to the first lantern, will disappear once you light it\n    const lanternHint = new Image(\"lantern1\", \"sprites/arrowBtn.png\");\n    lanternHint.rotation = Math.PI / 2;\n    lanternHint.stretch = Image.STRETCH_UNIFORM;\n    lanternHint.height = 0.8;\n    lanternHint.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    hint.addControl(lanternHint);\n    const moveHint = new TextBlock(\"move\", \"Move Right\");\n    moveHint.color = \"white\";\n    moveHint.fontSize = \"12px\";\n    moveHint.fontFamily = \"Viga\";\n    moveHint.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n    moveHint.textWrapping = true;\n    moveHint.resizeToFit = true;\n    hint.addControl(moveHint);\n\n    this._createPauseMenu();\n    this._createControlsMenu();\n    this._loadSounds(scene);\n\n    //Check if Mobile, add button controls\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      )\n    ) {\n      this.isMobile = true; // tells inputController to track mobile inputs\n\n      //tutorial image\n      movementPC.isVisible = false;\n      let movementMobile = new Image(\"pause\", \"sprites/tutorialMobile.jpeg\");\n      tutorial.addControl(movementMobile);\n      //--ACTION BUTTONS--\n      // container for action buttons (right side of screen)\n      const actionContainer = new Rectangle();\n      actionContainer.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n      actionContainer.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n      actionContainer.height = 0.4;\n      actionContainer.width = 0.2;\n      actionContainer.left = \"-2%\";\n      actionContainer.top = \"-2%\";\n      actionContainer.thickness = 0;\n      playerUI.addControl(actionContainer);\n\n      //grid for action button placement\n      const actionGrid = new Grid();\n      actionGrid.addColumnDefinition(0.5);\n      actionGrid.addColumnDefinition(0.5);\n      actionGrid.addRowDefinition(0.5);\n      actionGrid.addRowDefinition(0.5);\n      actionContainer.addControl(actionGrid);\n\n      const dashBtn = Button.CreateImageOnlyButton(\n        \"dash\",\n        \"./sprites/aBtn.png\"\n      );\n      dashBtn.thickness = 0;\n      dashBtn.alpha = 0.8;\n      dashBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n      this.dashBtn = dashBtn;\n\n      const jumpBtn = Button.CreateImageOnlyButton(\n        \"jump\",\n        \"./sprites/bBtn.png\"\n      );\n      jumpBtn.thickness = 0;\n      jumpBtn.alpha = 0.8;\n      jumpBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n      this.jumpBtn = jumpBtn;\n\n      actionGrid.addControl(dashBtn, 0, 1);\n      actionGrid.addControl(jumpBtn, 1, 0);\n\n      //--MOVEMENT BUTTONS--\n      // container for movement buttons (section left side of screen)\n      const moveContainer = new Rectangle();\n      moveContainer.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n      moveContainer.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n      moveContainer.height = 0.4;\n      moveContainer.width = 0.4;\n      moveContainer.left = \"2%\";\n      moveContainer.top = \"-2%\";\n      moveContainer.thickness = 0;\n      playerUI.addControl(moveContainer);\n\n      //grid for placement of arrow keys\n      const grid = new Grid();\n      grid.addColumnDefinition(0.4);\n      grid.addColumnDefinition(0.4);\n      grid.addColumnDefinition(0.4);\n      grid.addRowDefinition(0.5);\n      grid.addRowDefinition(0.5);\n      moveContainer.addControl(grid);\n\n      const leftBtn = Button.CreateImageOnlyButton(\n        \"left\",\n        \"./sprites/arrowBtn.png\"\n      );\n      leftBtn.thickness = 0;\n      leftBtn.rotation = -Math.PI / 2;\n      leftBtn.color = \"white\";\n      leftBtn.alpha = 0.8;\n      leftBtn.width = 0.8;\n      leftBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n      this.leftBtn = leftBtn;\n\n      const rightBtn = Button.CreateImageOnlyButton(\n        \"right\",\n        \"./sprites/arrowBtn.png\"\n      );\n      rightBtn.rotation = Math.PI / 2;\n      rightBtn.thickness = 0;\n      rightBtn.color = \"white\";\n      rightBtn.alpha = 0.8;\n      rightBtn.width = 0.8;\n      rightBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n      this.rightBtn = rightBtn;\n\n      const upBtn = Button.CreateImageOnlyButton(\n        \"up\",\n        \"./sprites/arrowBtn.png\"\n      );\n      upBtn.thickness = 0;\n      upBtn.alpha = 0.8;\n      upBtn.color = \"white\";\n      this.upBtn = upBtn;\n\n      const downBtn = Button.CreateImageOnlyButton(\n        \"down\",\n        \"./sprites/arrowBtn.png\"\n      );\n      downBtn.thickness = 0;\n      downBtn.rotation = Math.PI;\n      downBtn.color = \"white\";\n      downBtn.alpha = 0.8;\n      this.downBtn = downBtn;\n\n      //arrange the buttons in the grid\n      grid.addControl(leftBtn, 1, 0);\n      grid.addControl(rightBtn, 1, 2);\n      grid.addControl(upBtn, 0, 1);\n      grid.addControl(downBtn, 1, 1);\n    }\n  }\n\n  public updateHud(): void {\n    if (!this._stopTimer && this._startTime != null) {\n      let curTime =\n        Math.floor((new Date().getTime() - this._startTime) / 1000) +\n        this._prevTime; // divide by 1000 to get seconds\n\n      this.time = curTime; //keeps track of the total time elapsed in seconds\n      this._clockTime.text = this._formatTime(curTime);\n    }\n  }\n\n  public updateLanternCount(numLanterns: number): void {\n    this._lanternCnt.text = \"Lanterns: \" + numLanterns + \" / 22\";\n  }\n  //---- Game Timer ----\n  public startTimer(): void {\n    this._startTime = new Date().getTime();\n    this._stopTimer = false;\n  }\n  public stopTimer(): void {\n    this._stopTimer = true;\n  }\n\n  //format the time so that it is relative to 11:00 -- game time\n  private _formatTime(time: number): string {\n    let minsPassed = Math.floor(time / 60); //seconds in a min\n    let secPassed = time % 240; // goes back to 0 after 4mins/240sec\n    //gameclock works like: 4 mins = 1 hr\n    // 4sec = 1/15 = 1min game time\n    if (secPassed % 4 == 0) {\n      this._mString = Math.floor(minsPassed / 4) + 11;\n      this._sString = (secPassed / 4 < 10 ? \"0\" : \"\") + secPassed / 4;\n    }\n    let day = this._mString == 11 ? \" PM\" : \" AM\";\n    return this._mString + \":\" + this._sString + day;\n  }\n\n  //---- Sparkler Timers ----\n  //start and restart sparkler, handles setting the texture and animation frame\n  public startSparklerTimer(sparkler: ParticleSystem): void {\n    //reset the sparkler timers & animation frames\n    this.stopSpark = false;\n    this._sparklerLife.cellId = 0;\n    this._spark.cellId = 0;\n    if (this._handle) {\n      clearInterval(this._handle);\n    }\n    if (this._sparkhandle) {\n      clearInterval(this._sparkhandle);\n    }\n    //--SOUNDS--\n    this._sparkWarningSfx.stop(); // if you restart the sparkler while this was playing (it technically would never reach cellId==10, so you need to stop the sound)\n\n    //reset the sparkler (particle system and light)\n    if (sparkler != null) {\n      sparkler.start();\n      this._scene.getLightByName(\"sparklight\").intensity = 35;\n    }\n\n    //sparkler animation, every 2 seconds update for 10 bars of sparklife\n    this._handle = setInterval(() => {\n      if (!this.gamePaused) {\n        if (this._sparklerLife.cellId < 10) {\n          this._sparklerLife.cellId++;\n        }\n        if (this._sparklerLife.cellId == 9) {\n          this._sparkWarningSfx.play();\n        }\n        if (this._sparklerLife.cellId == 10) {\n          this.stopSpark = true;\n          clearInterval(this._handle);\n          //sfx\n          this._sparkWarningSfx.stop();\n        }\n      } else {\n        // if the game is paused, also pause the warning SFX\n        this._sparkWarningSfx.pause();\n      }\n    }, 2000);\n\n    this._sparkhandle = setInterval(() => {\n      if (!this.gamePaused) {\n        if (this._sparklerLife.cellId < 10 && this._spark.cellId < 5) {\n          this._spark.cellId++;\n        } else if (this._sparklerLife.cellId < 10 && this._spark.cellId >= 5) {\n          this._spark.cellId = 0;\n        } else {\n          this._spark.cellId = 0;\n          clearInterval(this._sparkhandle);\n        }\n      }\n    }, 185);\n  }\n\n  //stop the sparkler, resets the texture\n  public stopSparklerTimer(sparkler: ParticleSystem): void {\n    this.stopSpark = true;\n\n    if (sparkler != null) {\n      sparkler.stop();\n      this._scene.getLightByName(\"sparklight\").intensity = 0;\n    }\n  }\n\n  //---- Pause Menu Popup ----\n  private _createPauseMenu(): void {\n    this.gamePaused = false;\n\n    const pauseMenu = new Rectangle();\n    pauseMenu.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n    pauseMenu.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n    pauseMenu.height = 0.8;\n    pauseMenu.width = 0.5;\n    pauseMenu.thickness = 0;\n    pauseMenu.isVisible = false;\n\n    //background image\n    const image = new Image(\"pause\", \"sprites/pause.jpeg\");\n    pauseMenu.addControl(image);\n\n    //stack panel for the buttons\n    const stackPanel = new StackPanel();\n    stackPanel.width = 0.83;\n    pauseMenu.addControl(stackPanel);\n\n    const resumeBtn = Button.CreateSimpleButton(\"resume\", \"RESUME\");\n    resumeBtn.width = 0.18;\n    resumeBtn.height = \"44px\";\n    resumeBtn.color = \"white\";\n    resumeBtn.fontFamily = \"Viga\";\n    resumeBtn.paddingBottom = \"14px\";\n    resumeBtn.cornerRadius = 14;\n    resumeBtn.fontSize = \"12px\";\n    resumeBtn.textBlock.resizeToFit = true;\n    resumeBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    resumeBtn.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n    stackPanel.addControl(resumeBtn);\n\n    this._pauseMenu = pauseMenu;\n\n    //when the button is down, make menu invisable and remove control of the menu\n    resumeBtn.onPointerDownObservable.add(() => {\n      this._pauseMenu.isVisible = false;\n      this._playerUI.removeControl(pauseMenu);\n      this.pauseBtn.isHitTestVisible = true;\n\n      //game unpaused, our time is now reset\n      this.gamePaused = false;\n      this._startTime = new Date().getTime();\n\n      //--SOUNDS--\n      this._scene.getSoundByName(\"gameSong\").play();\n      this._pause.stop();\n\n      if (this._sparkWarningSfx.isPaused) {\n        this._sparkWarningSfx.play();\n      }\n      this._sfx.play(); //play transition sound\n    });\n\n    const controlsBtn = Button.CreateSimpleButton(\"controls\", \"CONTROLS\");\n    controlsBtn.width = 0.18;\n    controlsBtn.height = \"44px\";\n    controlsBtn.color = \"white\";\n    controlsBtn.fontFamily = \"Viga\";\n    controlsBtn.paddingBottom = \"14px\";\n    controlsBtn.cornerRadius = 14;\n    controlsBtn.fontSize = \"12px\";\n    resumeBtn.textBlock.resizeToFit = true;\n    controlsBtn.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n    controlsBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n\n    stackPanel.addControl(controlsBtn);\n\n    //when the button is down, make menu invisable and remove control of the menu\n    controlsBtn.onPointerDownObservable.add(() => {\n      //open controls screen\n      this._controls.isVisible = true;\n      this._pauseMenu.isVisible = false;\n\n      //play transition sound\n      this._sfx.play();\n    });\n\n    const quitBtn = Button.CreateSimpleButton(\"quit\", \"QUIT\");\n    quitBtn.width = 0.18;\n    quitBtn.height = \"44px\";\n    quitBtn.color = \"white\";\n    quitBtn.fontFamily = \"Viga\";\n    quitBtn.paddingBottom = \"12px\";\n    quitBtn.cornerRadius = 14;\n    quitBtn.fontSize = \"12px\";\n    resumeBtn.textBlock.resizeToFit = true;\n    quitBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    quitBtn.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n    stackPanel.addControl(quitBtn);\n\n    //set up transition effect\n    Effect.RegisterShader(\n      \"fade\",\n      \"precision highp float;\" +\n        \"varying vec2 vUV;\" +\n        \"uniform sampler2D textureSampler; \" +\n        \"uniform float fadeLevel; \" +\n        \"void main(void){\" +\n        \"vec4 baseColor = texture2D(textureSampler, vUV) * fadeLevel;\" +\n        \"baseColor.a = 1.0;\" +\n        \"gl_FragColor = baseColor;\" +\n        \"}\"\n    );\n    this.fadeLevel = 1.0;\n\n    quitBtn.onPointerDownObservable.add(() => {\n      const postProcess = new PostProcess(\n        \"Fade\",\n        \"fade\",\n        [\"fadeLevel\"],\n        null,\n        1.0,\n        this._scene.getCameraByName(\"cam\")\n      );\n      postProcess.onApply = (effect) => {\n        effect.setFloat(\"fadeLevel\", this.fadeLevel);\n      };\n      this.transition = true;\n\n      //--SOUNDS--\n      this.quitSfx.play();\n      if (this._pause.isPlaying) {\n        this._pause.stop();\n      }\n    });\n  }\n\n  //---- Controls Menu Popup ----\n  private _createControlsMenu(): void {\n    const controls = new Rectangle();\n    controls.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n    controls.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n    controls.height = 0.8;\n    controls.width = 0.5;\n    controls.thickness = 0;\n    controls.color = \"white\";\n    controls.isVisible = false;\n    this._playerUI.addControl(controls);\n    this._controls = controls;\n\n    //background image\n    const image = new Image(\"controls\", \"sprites/controls.jpeg\");\n    controls.addControl(image);\n\n    const title = new TextBlock(\"title\", \"CONTROLS\");\n    title.resizeToFit = true;\n    title.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    title.fontFamily = \"Viga\";\n    title.fontSize = \"32px\";\n    title.top = \"14px\";\n    controls.addControl(title);\n\n    const backBtn = Button.CreateImageOnlyButton(\n      \"back\",\n      \"./sprites/lanternbutton.jpeg\"\n    );\n    backBtn.width = \"40px\";\n    backBtn.height = \"40px\";\n    backBtn.top = \"14px\";\n    backBtn.thickness = 0;\n    backBtn.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n    backBtn.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n    controls.addControl(backBtn);\n\n    //when the button is down, make menu invisable and remove control of the menu\n    backBtn.onPointerDownObservable.add(() => {\n      this._pauseMenu.isVisible = true;\n      this._controls.isVisible = false;\n\n      //play transition sound\n      this._sfx.play();\n    });\n  }\n\n  //load all sounds needed for game ui interactions\n  private _loadSounds(scene: Scene): void {\n    this._pause = new Sound(\n      \"pauseSong\",\n      \"./sounds/Snowland.wav\",\n      scene,\n      function () {},\n      {\n        volume: 0.2,\n      }\n    );\n\n    this._sfx = new Sound(\n      \"selection\",\n      \"./sounds/vgmenuselect.wav\",\n      scene,\n      function () {}\n    );\n\n    this.quitSfx = new Sound(\n      \"quit\",\n      \"./sounds/Retro Event UI 13.wav\",\n      scene,\n      function () {}\n    );\n\n    this._sparkWarningSfx = new Sound(\n      \"sparkWarning\",\n      \"./sounds/Retro Water Drop 01.wav\",\n      scene,\n      function () {},\n      {\n        loop: true,\n        volume: 0.5,\n        playbackRate: 0.6,\n      }\n    );\n  }\n}\n","import {\n  Scene,\n  Color3,\n  Mesh,\n  Vector3,\n  PointLight,\n  Texture,\n  Color4,\n  ParticleSystem,\n  AnimationGroup,\n  PBRMetallicRoughnessMaterial,\n} from \"@babylonjs/core\";\n\nexport class Lantern {\n  public _scene: Scene;\n\n  public mesh: Mesh;\n  public isLit: boolean = false;\n  private _lightmtl: PBRMetallicRoughnessMaterial;\n  private _light: PointLight;\n\n  //Lantern animations\n  private _spinAnim: AnimationGroup;\n\n  //Particle System\n  private _stars: ParticleSystem;\n\n  constructor(\n    lightmtl: PBRMetallicRoughnessMaterial,\n    mesh: Mesh,\n    scene: Scene,\n    position: Vector3,\n    animationGroups: AnimationGroup\n  ) {\n    this._scene = scene;\n    this._lightmtl = lightmtl;\n\n    //load the lantern mesh\n    this._loadLantern(mesh, position);\n\n    //load particle system\n    this._loadStars();\n\n    //set animations\n    this._spinAnim = animationGroups;\n\n    //create light source for the lanterns\n    const light = new PointLight(\n      \"lantern light\",\n      this.mesh.getAbsolutePosition(),\n      this._scene\n    );\n    light.intensity = 0;\n    light.radius = 2;\n    light.diffuse = new Color3(0.45, 0.56, 0.8);\n    this._light = light;\n    //only allow light to affect meshes near it\n    this._findNearestMeshes(light);\n  }\n\n  private _loadLantern(mesh: Mesh, position: Vector3): void {\n    this.mesh = mesh;\n    this.mesh.scaling = new Vector3(0.8, 0.8, 0.8);\n    this.mesh.setAbsolutePosition(position);\n    this.mesh.isPickable = false;\n  }\n\n  public setEmissiveTexture(): void {\n    this.isLit = true;\n\n    //play animation and particle system\n    this._spinAnim.play();\n    this._stars.start();\n    //swap texture\n    this.mesh.material = this._lightmtl;\n    this._light.intensity = 30;\n  }\n\n  //when the light is created, only include the meshes specified\n  private _findNearestMeshes(light: PointLight): void {\n    if (this.mesh.name.includes(\"14\") || this.mesh.name.includes(\"15\")) {\n      light.includedOnlyMeshes.push(\n        this._scene.getMeshByName(\"festivalPlatform1\")\n      );\n    } else if (this.mesh.name.includes(\"16\") || this.mesh.name.includes(\"17\")) {\n      light.includedOnlyMeshes.push(\n        this._scene.getMeshByName(\"festivalPlatform2\")\n      );\n    } else if (this.mesh.name.includes(\"18\") || this.mesh.name.includes(\"19\")) {\n      light.includedOnlyMeshes.push(\n        this._scene.getMeshByName(\"festivalPlatform3\")\n      );\n    } else if (this.mesh.name.includes(\"20\") || this.mesh.name.includes(\"21\")) {\n      light.includedOnlyMeshes.push(\n        this._scene.getMeshByName(\"festivalPlatform4\")\n      );\n    }\n    //grab the corresponding transform node that holds all of the meshes affected by this lantern's light\n    this._scene\n      .getTransformNodeByName(this.mesh.name + \"lights\")\n      .getChildMeshes()\n      .forEach((m) => {\n        light.includedOnlyMeshes.push(m);\n      });\n  }\n\n  private _loadStars(): void {\n    const particleSystem = new ParticleSystem(\"stars\", 1000, this._scene);\n\n    particleSystem.particleTexture = new Texture(\n      \"textures/solidStar.png\",\n      this._scene\n    );\n    particleSystem.emitter = new Vector3(\n      this.mesh.position.x,\n      this.mesh.position.y + 1.5,\n      this.mesh.position.z\n    );\n    particleSystem.createPointEmitter(\n      new Vector3(0.6, 1, 0),\n      new Vector3(0, 1, 0)\n    );\n    particleSystem.color1 = new Color4(1, 1, 1);\n    particleSystem.color2 = new Color4(1, 1, 1);\n    particleSystem.colorDead = new Color4(1, 1, 1, 1);\n    particleSystem.emitRate = 12;\n    particleSystem.minEmitPower = 14;\n    particleSystem.maxEmitPower = 14;\n    particleSystem.addStartSizeGradient(0, 2);\n    particleSystem.addStartSizeGradient(1, 0.8);\n    particleSystem.minAngularSpeed = 0;\n    particleSystem.maxAngularSpeed = 2;\n    particleSystem.addDragGradient(0, 0.7, 0.7);\n    particleSystem.targetStopDuration = 0.25;\n\n    this._stars = particleSystem;\n  }\n}\n","import {\n  Scene,\n  Mesh,\n  Vector3,\n  Color3,\n  TransformNode,\n  SceneLoader,\n  ParticleSystem,\n  Color4,\n  Texture,\n  PBRMetallicRoughnessMaterial,\n  VertexBuffer,\n  AnimationGroup,\n  Sound,\n  ExecuteCodeAction,\n  ActionManager,\n  Tags,\n} from \"@babylonjs/core\";\nimport { Lantern } from \"./lantern\";\nimport { Player } from \"./characterController\";\n\nexport class Environment {\n  private _scene: Scene;\n\n  //Meshes\n  private _lanternObjs: Array<Lantern>; //array of lanterns that need to be lit\n  private _lightmtl: PBRMetallicRoughnessMaterial; // emissive texture for when lanterns are lit\n\n  //fireworks\n  private _fireworkObjs: Firework[] = [];\n  private _startFireworks: boolean = false;\n\n  constructor(scene: Scene) {\n    this._scene = scene;\n    this._lanternObjs = [];\n\n    //create emissive material for when lantern is lit\n    const lightmtl = new PBRMetallicRoughnessMaterial(\n      \"lantern mesh light\",\n      this._scene\n    );\n    lightmtl.emissiveTexture = new Texture(\n      \"/textures/litLantern.png\",\n      this._scene,\n      true,\n      false\n    );\n    lightmtl.emissiveColor = new Color3(\n      0.8784313725490196,\n      0.7568627450980392,\n      0.6235294117647059\n    );\n    this._lightmtl = lightmtl;\n  }\n  //What we do once the environment assets have been imported\n  //handles setting the necessary flags for collision and trigger meshes,\n  //sets up the lantern objects\n  //creates the firework particle systems for end-game\n  public async load() {\n    const assets = await this._loadAsset();\n    //Loop through all environment meshes that were imported\n    assets.allMeshes.forEach((m) => {\n      m.receiveShadows = true;\n      m.checkCollisions = true;\n\n      if (m.name == \"ground\") {\n        //dont check for collisions, dont allow for raycasting to detect it(cant land on it)\n        m.checkCollisions = false;\n        m.isPickable = false;\n      }\n\n      //areas that will use box collisions\n      if (\n        m.name.includes(\"stairs\") ||\n        m.name == \"cityentranceground\" ||\n        m.name == \"fishingground.001\" ||\n        m.name.includes(\"lilyflwr\")\n      ) {\n        m.checkCollisions = false;\n        m.isPickable = false;\n      }\n      //collision meshes\n      if (m.name.includes(\"collision\")) {\n        m.isVisible = false;\n        m.isPickable = true;\n      }\n      //trigger meshes\n      if (m.name.includes(\"Trigger\")) {\n        m.isVisible = false;\n        m.isPickable = false;\n        m.checkCollisions = false;\n      }\n    });\n\n    //--LANTERNS--\n    assets.lantern.isVisible = false; //original mesh is not visible\n    //transform node to hold all lanterns\n    const lanternHolder = new TransformNode(\"lanternHolder\", this._scene);\n    for (let i = 0; i < 22; i++) {\n      //Mesh Cloning\n      let lanternInstance = assets.lantern.clone(\"lantern\" + i); //bring in imported lantern mesh & make clones\n      lanternInstance.isVisible = true;\n      lanternInstance.setParent(lanternHolder);\n\n      //Animation cloning\n      let animGroupClone = new AnimationGroup(\"lanternAnimGroup \" + i);\n      animGroupClone.addTargetedAnimation(\n        assets.animationGroups.targetedAnimations[0].animation,\n        lanternInstance\n      );\n\n      //Create the new lantern object\n      let newLantern = new Lantern(\n        this._lightmtl,\n        lanternInstance,\n        this._scene,\n        assets.env\n          .getChildTransformNodes(false)\n          .find((m) => m.name === \"lantern \" + i)\n          .getAbsolutePosition(),\n        animGroupClone\n      );\n      this._lanternObjs.push(newLantern);\n    }\n    //dispose of original mesh and animation group that were cloned\n    assets.lantern.dispose();\n    assets.animationGroups.dispose();\n\n    //--FIREWORKS--\n    for (let i = 0; i < 20; i++) {\n      this._fireworkObjs.push(new Firework(this._scene, i));\n    }\n    //before the scene renders, check to see if the fireworks have started\n    //if they have, trigger the firework sequence\n    this._scene.onBeforeRenderObservable.add(() => {\n      this._fireworkObjs.forEach((f) => {\n        if (this._startFireworks) {\n          f._startFirework();\n        }\n      });\n    });\n  }\n\n  //Load all necessary meshes for the environment\n  public async _loadAsset() {\n    //loads game environment\n    const result = await SceneLoader.ImportMeshAsync(\n      null,\n      \"./models/\",\n      \"envSetting.glb\",\n      this._scene\n    );\n\n    let env = result.meshes[0];\n    let allMeshes = env.getChildMeshes();\n\n    //loads lantern mesh\n    const res = await SceneLoader.ImportMeshAsync(\n      \"\",\n      \"./models/\",\n      \"lantern.glb\",\n      this._scene\n    );\n\n    //extract the actual lantern mesh from the root of the mesh that's imported, dispose of the root\n    let lantern = res.meshes[0].getChildren()[0];\n    lantern.parent = null;\n    res.meshes[0].dispose();\n\n    //--ANIMATION--\n    //extract animation from lantern (following demystifying animation groups video)\n    const importedAnims = res.animationGroups;\n    let animation = [];\n    animation.push(importedAnims[0].targetedAnimations[0].animation);\n    importedAnims[0].dispose();\n    //create a new animation group and target the mesh to its animation\n    let animGroup = new AnimationGroup(\"lanternAnimGroup\");\n    animGroup.addTargetedAnimation(animation[0], res.meshes[1]);\n\n    return {\n      env: env,\n      allMeshes: allMeshes,\n      lantern: lantern as Mesh,\n      animationGroups: animGroup,\n    };\n  }\n\n  public checkLanterns(player: Player) {\n    if (!this._lanternObjs[0].isLit) {\n      this._lanternObjs[0].setEmissiveTexture();\n    }\n    this._lanternObjs.forEach((lantern) => {\n      player.mesh.actionManager.registerAction(\n        new ExecuteCodeAction(\n          {\n            trigger: ActionManager.OnIntersectionEnterTrigger,\n            parameter: lantern.mesh,\n          },\n          () => {\n            //if the lantern is not lit, light it up & reset sparkler timer\n            if (!lantern.isLit && player.sparkLit) {\n              player.lanternsLit += 1;\n              lantern.setEmissiveTexture();\n              player.sparkReset = true;\n              player.sparkLit = true;\n\n              //SFX\n              player.lightSfx.play();\n            }\n            //if the lantern is lit already, reset the sparkler timer\n            else if (lantern.isLit) {\n              player.sparkReset = true;\n              player.sparkLit = true;\n\n              //SFX\n              player.sparkResetSfx.play();\n            }\n          }\n        )\n      );\n    });\n  }\n}\n\nclass Firework {\n  private _scene: Scene;\n\n  //variables used by environment\n  private _emitter: Mesh;\n  private _rocket: ParticleSystem;\n  private _exploded: boolean = false;\n  private _height: number;\n  private _delay: number;\n  private _started: boolean;\n\n  //sounds\n  private _explosionSfx: Sound;\n  private _rocketSfx: Sound;\n\n  constructor(scene: Scene, i: number) {\n    this._scene = scene;\n    //Emitter for rocket of firework\n    const sphere = Mesh.CreateSphere(\"rocket\", 4, 1, scene);\n    sphere.isVisible = false;\n    //the origin spawn point for all fireworks is determined by a TransformNode called \"fireworks\", this was placed in blender\n    let randPos = Math.random() * 10;\n    sphere.position = new Vector3(\n      scene.getTransformNodeByName(\"fireworks\").getAbsolutePosition().x +\n        randPos * -1,\n      scene.getTransformNodeByName(\"fireworks\").getAbsolutePosition().y,\n      scene.getTransformNodeByName(\"fireworks\").getAbsolutePosition().z\n    );\n    this._emitter = sphere;\n\n    //Rocket particle system\n    let rocket = new ParticleSystem(\"rocket\", 350, scene);\n    rocket.particleTexture = new Texture(\"./textures/flare.png\", scene);\n    rocket.emitter = sphere;\n    rocket.emitRate = 20;\n    rocket.minEmitBox = new Vector3(0, 0, 0);\n    rocket.maxEmitBox = new Vector3(0, 0, 0);\n    rocket.color1 = new Color4(0.49, 0.57, 0.76);\n    rocket.color2 = new Color4(0.29, 0.29, 0.66);\n    rocket.colorDead = new Color4(0, 0, 0.2, 0.5);\n    rocket.minSize = 1;\n    rocket.maxSize = 1;\n    rocket.addSizeGradient(0, 1);\n    rocket.addSizeGradient(1, 0.01);\n    this._rocket = rocket;\n\n    //set how high the rocket will travel before exploding and how long it'll take before shooting the rocket\n    this._height = sphere.position.y + Math.random() * (15 + 4) + 4;\n    this._delay = (Math.random() * i + 1) * 60; //frame based\n\n    this._loadSounds();\n  }\n\n  private _explosions(position: Vector3): void {\n    //mesh that gets split into vertices\n    const explosion = Mesh.CreateSphere(\"explosion\", 4, 1, this._scene);\n    explosion.isVisible = false;\n    explosion.position = position;\n\n    let emitter = explosion;\n    emitter.useVertexColors = true;\n    let vertPos = emitter.getVerticesData(VertexBuffer.PositionKind);\n    let vertNorms = emitter.getVerticesData(VertexBuffer.NormalKind);\n    let vertColors = [];\n\n    //for each vertex, create a particle system\n    for (let i = 0; i < vertPos.length; i += 3) {\n      let vertPosition = new Vector3(\n        vertPos[i],\n        vertPos[i + 1],\n        vertPos[i + 2]\n      );\n      let vertNormal = new Vector3(\n        vertNorms[i],\n        vertNorms[i + 1],\n        vertNorms[i + 2]\n      );\n      let r = Math.random();\n      let g = Math.random();\n      let b = Math.random();\n      let alpha = 1.0;\n      let color = new Color4(r, g, b, alpha);\n      vertColors.push(r);\n      vertColors.push(g);\n      vertColors.push(b);\n      vertColors.push(alpha);\n\n      //emitter for the particle system\n      let gizmo = Mesh.CreateBox(\"gizmo\", 0.001, this._scene);\n      gizmo.position = vertPosition;\n      gizmo.parent = emitter;\n      let direction = vertNormal.normalize().scale(1); // move in the direction of the normal\n\n      //actual particle system for each exploding piece\n      const particleSys = new ParticleSystem(\"particles\", 500, this._scene);\n      particleSys.particleTexture = new Texture(\n        \"textures/flare.png\",\n        this._scene\n      );\n      particleSys.emitter = gizmo;\n      particleSys.minEmitBox = new Vector3(1, 0, 0);\n      particleSys.maxEmitBox = new Vector3(1, 0, 0);\n      particleSys.minSize = 0.1;\n      particleSys.maxSize = 0.1;\n      particleSys.color1 = color;\n      particleSys.color2 = color;\n      particleSys.colorDead = new Color4(0, 0, 0, 0.0);\n      particleSys.minLifeTime = 1;\n      particleSys.maxLifeTime = 2;\n      particleSys.emitRate = 500;\n      particleSys.gravity = new Vector3(0, -9.8, 0);\n      particleSys.direction1 = direction;\n      particleSys.direction2 = direction;\n      particleSys.minEmitPower = 10;\n      particleSys.maxEmitPower = 13;\n      particleSys.updateSpeed = 0.01;\n      particleSys.targetStopDuration = 0.2;\n      particleSys.disposeOnStop = true;\n      particleSys.start();\n    }\n\n    emitter.setVerticesData(VertexBuffer.ColorKind, vertColors);\n  }\n\n  public _startFirework(): void {\n    if (this._started) {\n      //if it's started, rocket flies up to height & then explodes\n      if (this._emitter.position.y >= this._height && !this._exploded) {\n        //--sounds--\n        this._explosionSfx.play();\n        //transition to the explosion particle system\n        this._exploded = !this._exploded; // don't allow for it to explode again\n        this._explosions(this._emitter.position);\n        this._emitter.dispose();\n        this._rocket.stop();\n      } else {\n        //move the rocket up\n        this._emitter.position.y += 0.2;\n      }\n    } else {\n      //use its delay to know when to shoot the firework\n      if (this._delay <= 0) {\n        this._started = true;\n        //--sounds--\n        this._rocketSfx.play();\n        //start particle system\n        this._rocket.start();\n      } else {\n        this._delay--;\n      }\n    }\n  }\n\n  private _loadSounds(): void {\n    this._rocketSfx = new Sound(\n      \"selection\",\n      \"./sounds/fw_05.wav\",\n      this._scene,\n      function () {},\n      {\n        volume: 0.5,\n      }\n    );\n\n    this._explosionSfx = new Sound(\n      \"selection\",\n      \"./sounds/fw_03.wav\",\n      this._scene,\n      function () {},\n      {\n        volume: 0.5,\n      }\n    );\n  }\n}\n","\n// import { App } from '@game';\nimport { App } from '../babylon/game';\nlet _this: any;\nexport default {\n    created(){\n        _this = this;\n    },\n    mounted: () => {\n        const canvas: HTMLCanvasElement = ( _this || { $refs: { canvas: null } }).$refs.canvas;\n        new App(canvas);\n    }\n}\n","import { render } from \"./Game.vue?vue&type=template&id=456ad714&ts=true\"\nimport script from \"./Game.vue?vue&type=script&lang=ts\"\nexport * from \"./Game.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/nizar/work/learning/front-end/babylon-101/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { ref: \"canvas\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"canvas\", _hoisted_1, null, 512))\n}","import {\n  Scene,\n  Engine,\n  FreeCamera,\n  Vector3,\n  HemisphericLight,\n  MeshBuilder,\n  Mesh,\n  StandardMaterial,\n  Texture,\n} from \"@babylonjs/core\";\n\nexport default class {\n  scene: Scene;\n  engine: Engine;\n\n  constructor(private canvas: HTMLCanvasElement) {\n    // Create the engine and the scene\n    this.engine = this.createEngine(this.canvas);\n    this.scene = this.createScene();\n    // Run render loop\n    this.engine.runRenderLoop(() => {\n      this.scene.render();\n    });\n  }\n\n  private createEngine(canvas: HTMLCanvasElement): Engine {\n    return new Engine(canvas, true);\n  }\n\n  private createScene(): Scene {\n    const scene: Scene = new Scene(this.engine);\n\n    const camera: FreeCamera = new FreeCamera(\n      \"camera\",\n      new Vector3(0, 1, -5),\n      scene\n    );\n\n    camera.attachControl();\n    camera.speed = 0.1;\n\n    const hemiLight: HemisphericLight = new HemisphericLight(\n      \"hemi-light\",\n      new Vector3(0, 1, 0),\n      scene\n    );\n    hemiLight.intensity = 1;\n\n    const ground: Mesh = MeshBuilder.CreateGround(\n      \"ground\",\n      { width: 10, height: 10 },\n      scene\n    );\n\n    const ball: Mesh = MeshBuilder.CreateSphere(\"sphere\", {\n      diameter: 1,\n    });\n\n    ball.position = new Vector3(0, 1, 0);\n\n    ball.material = this.createBallMaterial();\n    ground.material = this.createGroundMaterial();\n\n    return scene;\n  }\n\n  private createGroundMaterial(): StandardMaterial {\n    const groundMaterial: StandardMaterial = new StandardMaterial(\n      \"ground-material\",\n      this.scene\n    );\n\n    const uvScale = 4;\n    const textures: Texture[] = [];\n\n    // Diffuse Texture\n    const diffuseTex = new Texture(\"./textures/stone/diffuse.jpg\", this.scene);\n    groundMaterial.diffuseTexture = diffuseTex;\n    textures.push(diffuseTex);\n\n    // Normal Texture\n    const normalTex = new Texture(\"./textures/stone/normal.jpg\", this.scene);\n    groundMaterial.bumpTexture = normalTex;\n    groundMaterial.invertNormalMapX = true;\n    groundMaterial.invertNormalMapY = true;\n    textures.push(normalTex);\n\n    // AO Texture\n    const aoTex = new Texture(\"./textures/stone/ao.jpg\", this.scene);\n    groundMaterial.ambientTexture = aoTex;\n    textures.push(aoTex);\n\n    // Specular Texture\n    const specTex = new Texture(\"./textures/stone/spec.jpg\", this.scene);\n    groundMaterial.specularTexture = specTex;\n    textures.push(specTex);\n\n    // Set the uvScale\n    textures.forEach((tex) => {\n      tex.uScale = uvScale;\n      tex.vScale = uvScale;\n    });\n\n    return groundMaterial;\n  }\n\n  private createBallMaterial(): StandardMaterial {\n    const ballMaterial: StandardMaterial = new StandardMaterial(\n      \"ball-material\",\n      this.scene\n    );\n\n    const uvScale = 1;\n    const textures: Texture[] = [];\n\n    // Diffuse Texture\n    const diffuseTex = new Texture(\"./textures/metal/diffuse.jpg\", this.scene);\n    ballMaterial.diffuseTexture = diffuseTex;\n    textures.push(diffuseTex);\n\n    // Normal Texture\n    const normalTex = new Texture(\"./textures/metal/normal.jpg\", this.scene);\n    ballMaterial.bumpTexture = normalTex;\n    ballMaterial.invertNormalMapX = true;\n    ballMaterial.invertNormalMapY = true;\n    textures.push(normalTex);\n\n    // AO Texture\n    const aoTex = new Texture(\"./textures/metal/ao.jpg\", this.scene);\n    ballMaterial.ambientTexture = aoTex;\n    textures.push(aoTex);\n\n    // Specular Texture\n    const specTex = new Texture(\"./textures/metal/spec.jpg\", this.scene);\n    ballMaterial.specularTexture = specTex;\n    textures.push(specTex);\n\n    // Set the uvScale\n    textures.forEach((tex) => {\n      tex.uScale = uvScale;\n      tex.vScale = uvScale;\n    });\n\n    ballMaterial.specularPower = 1;\n\n    return ballMaterial;\n  }\n}\n","interface canvasConfig {\n  height: number;\n  width: number;\n}\n\nimport TheScene from \"./scene\";\n\nfunction initCanvas(canvas: HTMLCanvasElement, config?: canvasConfig) {\n  if (config) {\n    canvas.height = config.height;\n    canvas.width = config.width;\n  }\n  const firstScene: TheScene = new TheScene(canvas);\n}\n\nexport { initCanvas };\n","\nimport { initCanvas } from '../babylon/learning'\nlet _this: any;\nexport default {\n    created() {\n        _this = this;\n    },\n    mounted: () => {\n        const canvas: HTMLCanvasElement = (_this || { $refs: { canvas: null } }).$refs.canvas;\n        initCanvas(canvas, {\n            height: window.innerHeight,\n            width: window.innerWidth\n        });\n        console.log(\"@ Learning Page :)\")\n    }\n}\n","import { render } from \"./Learning.vue?vue&type=template&id=19caf4f3&ts=true\"\nimport script from \"./Learning.vue?vue&type=script&lang=ts\"\nexport * from \"./Learning.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/nizar/work/learning/front-end/babylon-101/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Game from \"../components/Game.vue\";\nimport Learning from \"../components/Learning.vue\";\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes: [\n    { path: \"/\", redirect: \"/learning\" },\n    {\n      path: \"/learning\",\n      component: Learning,\n    },\n    {\n      path: \"/game\",\n      component: Game,\n    },\n  ],\n});\n\nexport { router };\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport { router } from \"./router\";\n\nconst app = createApp(App);\napp.use(router);\napp.mount(\"#app\");\n\nimport \"./assets/main.scss\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbabylon_101\"] = self[\"webpackChunkbabylon_101\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], () => (__webpack_require__(5505)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["script","__exports__","render","_hoisted_1","ref","_ctx","_cache","$props","$setup","$data","$options","PlayerInput","inputMap","_scene","horizontal","vertical","horizontalAxis","verticalAxis","jumpKeyDown","dashing","_ui","mobileLeft","mobileRight","mobileUp","mobileDown","_mobileJump","_mobileDash","constructor","scene","ui","this","actionManager","ActionManager","registerAction","ExecuteCodeAction","evt","sourceEvent","key","type","onBeforeRenderObservable","add","_updateFromKeyboard","isMobile","_setUpMobile","gamePaused","Scalar","jumpBtn","onPointerDownObservable","onPointerUpObservable","dashBtn","leftBtn","rightBtn","upBtn","downBtn","Player","TransformNode","camera","_input","mesh","_camRoot","_yTilt","_run","_idle","_jump","_land","_dash","_currentAnim","_prevAnim","_isFalling","_jumped","static","Vector3","dashTime","_deltaTime","_h","_v","_moveDirection","_inputAmt","_dashPressed","_canDash","_gravity","_lastGroundPos","_grounded","_jumpCount","lanternsLit","totalLanterns","win","sparkler","sparkLit","sparkReset","_raisePlatform","lightSfx","sparkResetSfx","_resetSfx","_walkingSfx","_jumpingSfx","_dashingSfx","onRun","Observable","tutorial_move","tutorial_dash","tutorial_jump","assets","shadowGenerator","input","super","_loadSounds","_setupPlayerCamera","parent","getLightByName","getTransformNodeByName","animationGroups","trigger","parameter","getMeshByName","rotation","position","y","copyFrom","play","isPlaying","stop","_createSparkles","_setUpAnimations","addShadowCaster","_updateFromControls","getEngine","getDeltaTime","dashFactor","DASH_TIME","DASH_FACTOR","fwd","forward","right","correctedVertical","scaleInPlace","correctedHorizontal","move","addInPlace","normalize","x","z","inputMag","Math","abs","PLAYER_SPEED","length","angle","atan2","targ","Quaternion","rotationQuaternion","stopAllAnimations","loopAnimation","_animatePlayer","getSoundByName","notifyObservers","_floorRaycast","offsetx","offsetz","raycastlen","raycastFloorPos","ray","Ray","scale","predicate","isPickable","isEnabled","pick","pickWithRay","hit","pickedPoint","_isGrounded","equals","_checkSlope","raycast","raycast2","ray2","pick2","raycast3","ray3","pick3","raycast4","ray4","pick4","getNormal","pickedMesh","name","includes","_updateGroundDetection","console","log","GRAVITY","JUMP_FORCE","moveWithCollisions","_beforeRenderUpdate","activatePlayerCamera","registerBeforeRender","_updateCamera","intersectsMesh","PI","DOWN_TILT","ORIGINAL_TILT","centerPlayer","yTilt","UniversalCamera","lockedTarget","fov","activeCamera","sphere","Mesh","isVisible","particleSystem","ParticleSystem","particleTexture","Texture","emitter","particleEmitterType","SphereParticleEmitter","updateSpeed","minAngularSpeed","maxAngularSpeed","minEmitPower","maxEmitPower","minSize","maxSize","minScaleX","minScaleY","color1","Color4","color2","addRampGradient","Color3","getRampGradients","color","maxInitialRotation","start","Sound","volume","loop","playbackRate","State","Hud","time","_prevTime","_clockTime","_startTime","_stopTimer","_sString","_mString","_lanternCnt","_sparklerLife","_spark","stopSpark","_handle","_sparkhandle","quit","transition","pauseBtn","fadeLevel","_playerUI","_pauseMenu","_controls","tutorial","hint","quitSfx","_sfx","_pause","_sparkWarningSfx","playerUI","AdvancedDynamicTexture","idealHeight","lanternCnt","TextBlock","textVerticalAlignment","horizontalAlignment","Control","verticalAlignment","fontSize","text","top","left","width","fontFamily","resizeToFit","addControl","stackPanel","StackPanel","height","clockTime","textHorizontalAlignment","sparklerLife","Image","cellId","cellHeight","cellWidth","sourceWidth","sourceHeight","spark","Button","thickness","zIndex","isHitTestVisible","pause","Rectangle","alpha","movementPC","lanternHint","stretch","moveHint","textWrapping","_createPauseMenu","_createControlsMenu","test","navigator","userAgent","movementMobile","actionContainer","actionGrid","Grid","addColumnDefinition","addRowDefinition","moveContainer","grid","updateHud","curTime","floor","Date","getTime","_formatTime","updateLanternCount","numLanterns","startTimer","stopTimer","minsPassed","secPassed","day","startSparklerTimer","clearInterval","intensity","setInterval","stopSparklerTimer","pauseMenu","image","resumeBtn","paddingBottom","cornerRadius","textBlock","removeControl","isPaused","controlsBtn","quitBtn","Effect","postProcess","PostProcess","getCameraByName","onApply","effect","setFloat","controls","title","backBtn","Lantern","isLit","_lightmtl","_light","_spinAnim","_stars","lightmtl","_loadLantern","_loadStars","light","PointLight","getAbsolutePosition","radius","diffuse","_findNearestMeshes","scaling","setAbsolutePosition","setEmissiveTexture","material","includedOnlyMeshes","push","getChildMeshes","forEach","m","createPointEmitter","colorDead","emitRate","addStartSizeGradient","addDragGradient","targetStopDuration","Environment","_lanternObjs","_fireworkObjs","_startFireworks","PBRMetallicRoughnessMaterial","emissiveTexture","emissiveColor","async","_loadAsset","allMeshes","receiveShadows","checkCollisions","lantern","lanternHolder","i","lanternInstance","clone","setParent","animGroupClone","AnimationGroup","addTargetedAnimation","targetedAnimations","animation","newLantern","env","getChildTransformNodes","find","dispose","Firework","f","_startFirework","result","SceneLoader","meshes","res","getChildren","importedAnims","animGroup","checkLanterns","player","_emitter","_rocket","_exploded","_height","_delay","_started","_explosionSfx","_rocketSfx","randPos","random","rocket","minEmitBox","maxEmitBox","addSizeGradient","_explosions","explosion","useVertexColors","vertPos","getVerticesData","VertexBuffer","vertNorms","vertColors","vertPosition","vertNormal","r","g","b","gizmo","direction","particleSys","minLifeTime","maxLifeTime","gravity","direction1","direction2","disposeOnStop","setVerticesData","_canvas","_engine","_player","_environment","game","end","_state","_gamescene","_cutScene","_transition","canvas","_createCanvas","_init","EngineFactory","undefined","Scene","window","addEventListener","ev","shiftKey","ctrlKey","altKey","keyCode","debugLayer","hide","show","_main","_goToStart","runRenderLoop","START","CUTSCENE","GAME","_goToLose","LOSE","resize","document","documentElement","style","overflow","margin","padding","body","innerHeight","innerWidth","id","displayLoadingUI","detachControl","clearColor","FreeCamera","setTarget","autoplay","sfx","guiMenu","imageRect","startbg","startBtn","_goToCutScene","rect1","background","rect","alert","closealert","enterFullscreen","whenReadyAsync","hideLoadingUI","cutScene","canplay","finished_anim","anims_loaded","beginning_anim","onImageLoadedObservable","working_anim","dropoff_anim","leaving_anim","watermelon_anim","reading_anim","dialogueBg","dialogue","dialogueTimer","skipBtn","animTimer","anim2Timer","anim","next","finishedLoading","_goToGame","_setUpGame","then","environment","load","_loadCharacterAssets","envHdri","CubeTexture","gammaSpace","environmentTexture","environmentIntensity","_initializeGameAsync","attachControl","_showWin","clear","winUI","wincreds","music","source","jumpCred","walkCred","gameCred","pauseCred","endCred","loseCred","fireworksSfx","dashCred","sfxCred","sfxCred2","selectionSfxCred","mainMenu","autoScale","panel","dots","mainBtn","loadCharacter","outer","MeshBuilder","depth","bakeTransformIntoVertices","Matrix","ellipsoid","ellipsoidOffset","root","ambientColor","ShadowGenerator","darkness","gl","GlowLayer","addIncludedOnlyMesh","_this","created","mounted","$refs","engine","createEngine","createScene","Engine","speed","hemiLight","HemisphericLight","ground","ball","diameter","createBallMaterial","createGroundMaterial","groundMaterial","StandardMaterial","uvScale","textures","diffuseTex","diffuseTexture","normalTex","bumpTexture","invertNormalMapX","invertNormalMapY","aoTex","ambientTexture","specTex","specularTexture","tex","uScale","vScale","ballMaterial","specularPower","initCanvas","config","router","history","routes","path","redirect","component","Learning","Game","app","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","d","definition","o","defineProperty","enumerable","get","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}